#compdef kb

# Auto-generated with h2o


function _kb {
    local line state

    function _commands {
        local -a commands
        commands=(
            'add:Add an artifact'
            'edit:Edit an artifact content'
            'list:Search for artifacts'
            'view:View artifacts'
            'grep:Grep through kb artifacts'
            'update:Update artifact properties'
            'delete:Delete artifacts'
            'template:Manage templates for artifacts'
            'import:Import a knowledge base'
            'export:Export the knowledge base'
            'erase:Erase the entire kb knowledge base'
            'sync:Synchronize the knowledge base with a remote git repository'
            'help:Show help of a particular command'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[show this help message and exit]' \
        '--version[show program'\''s version number and exit]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (add)
            _kb_add
            ;;

        (edit)
            _kb_edit
            ;;

        (list)
            _kb_list
            ;;

        (view)
            _kb_view
            ;;

        (grep)
            _kb_grep
            ;;

        (update)
            _kb_update
            ;;

        (delete)
            _kb_delete
            ;;

        (template)
            _kb_template
            ;;

        (import)
            _kb_import
            ;;

        (export)
            _kb_export
            ;;

        (erase)
            _kb_erase
            ;;

        (sync)
            _kb_sync
            ;;

        (help)
            _kb_help
            ;;

        esac
        ;;
     esac

}

function _kb_add {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-t,--title}'[Title of the added artifact]' \
        {-c,--category}'[Category associated to the artifact]' \
        {-g,--tags}'[Tags to associate to the artifact in the form "tag1;tag2;...;tagN"]' \
        {-a,--author}'[Author of the artifact]' \
        {-s,--status}'[Status of the artifact]' \
        '--template[Template to apply to the artifact]' \
        {-b,--body}'[Body of the artifact]' \
        "*: :_files"

}

function _kb_edit {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-i,--id}'[ID of the artifact to edit]' \
        {-t,--title}'[Title to update]' \
        {-c,--category}'[Category to update]' \
        {-g,--tags}'[Tags to update in the form "tag1;tag2;...;tagN"]' \
        {-a,--author}'[Author to update]' \
        {-s,--status}'[Status to update]' \
        "*: :_files"

}

function _kb_list {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-c,--category}'[Filter search results by specified category]' \
        {-g,--tags}'[Tags associates to the artifact to search in the form "tag1;tag2;...;tagN"]' \
        {-a,--author}'[Filter search results by specified author]' \
        {-s,--status}'[Filter search results by specified status]' \
        {-v,--verbose}'[Show additional information for the provided results]' \
        {-f,--full-identifier}'[Print results in full-identifier mode]' \
        {-n,--no-color}'[Enabled no-color mode]' \
        "*: :_files"

}

function _kb_view {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-i,--id}'[ID of the artifact to visualize]' \
        {-t,--title}'[Title of the artifact to visualize]' \
        {-c,--category}'[Category associated to the artifact to visualize]' \
        {-e,--open-editor}'[Open the file in a text editor (read-only mode)]' \
        {-n,--no-color}'[Enabled no-color mode]' \
        "*: :_files"

}

function _kb_grep {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-c,--category}'[Filter search results by specified category]' \
        {-g,--tags}'[Tags associates to the artifact to search in the form "tag1;tag2;...;tagN"]' \
        {-a,--author}'[Filter search results by specified author]' \
        {-s,--status}'[Filter search results by specified status]' \
        {-m,--show-matches}'[Show text matching the regex within the artifact]' \
        {-i,--case-insensitive}'[Perform grep using a case insensitive regex]' \
        {-v,--verbose}'[Show additional information for the provided results]' \
        {-n,--no-color}'[Enabled no-color mode]' \
        "*: :_files"

}

function _kb_update {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-i,--id}'[ID of the artifact to update]' \
        {-t,--title}'[Title to update]' \
        {-c,--category}'[Category to update]' \
        {-g,--tags}'[Tags to update in the form "tag1;tag2;...;tagN"]' \
        {-a,--author}'[Author to update]' \
        {-s,--status}'[Status to update]' \
        '--template[Template to update]' \
        {-e,--edit-content}'[Edit content of the artifact with an editor]' \
        {-b,--body}'[Update the body of the artifact (erases the current content)]' \
        "*: :_files"

}

function _kb_delete {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-i,--id}'[ID of the artifact]' \
        {-t,--title}'[Title of the artifact to remove]' \
        {-c,--category}'[Category associated to the artifact to remove]' \
        "*: :_files"

}


function _kb_template {
    local line state

    function _commands {
        local -a commands
        commands=(
            'add:Add a template from a file'
            'edit:Edit a template'
            'list:List all templates'
            'new:Create a template from starting from an example'
            'delete:Delete an existing template'
            'apply:Apply a template to an entire set of artifacts'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[show this help message and exit]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (add)
            _kb_template_add
            ;;

        (edit)
            _kb_template_edit
            ;;

        (list)
            _kb_template_list
            ;;

        (new)
            _kb_template_new
            ;;

        (delete)
            _kb_template_delete
            ;;

        (apply)
            _kb_template_apply
            ;;

        esac
        ;;
     esac

}

function _kb_template_add {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-t,--title}'[The title to assign to the template added from a file to kb]' \
        "*: :_files"

}

function _kb_template_edit {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _kb_template_list {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-n,--no-color}'[Enabled no-color mode]' \
        "*: :_files"

}

function _kb_template_new {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _kb_template_delete {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _kb_template_apply {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-t,--title}'[Title of the artifacts on which template is applied]' \
        {-c,--category}'[Category of the artifacts on which template is applied]' \
        {-g,--tags}'[Tags associates to the artifacts in the form "tag1;tag2;...;tagN" where template is applied]' \
        {-a,--author}'[Author of the artifacts on which template is applied]' \
        {-s,--status}'[Status of the artifacts on which template is applied]' \
        {-m,--extended-match}'[Perform application query not on a strict match, for example: `kb template apply --category cheat -m` will match all artifacts containing in their category "cheat", hence "cheatsheet", "mycheats","cheatsheets" and so on"]' \
        "*: :_files"

}

function _kb_import {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _kb_export {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        {-f,--file}'[Name of the exported archive]':file:_files \
        {-d,--only-data}'[Export only notes files organized as directories (one for each category)]' \
        "*: :_files"

}

function _kb_erase {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        '--db[Only remove kb database]' \
        "*: :_files"

}

function _kb_sync {
    _arguments \
        {-h,--help}'[show this help message and exit]' \
        "*: :_files"

}

function _kb_help {
    _arguments \
        "*: :_files"

}

_kb "$@"

