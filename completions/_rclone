#compdef rclone

# Auto-generated with h2o


function _rclone {
    local line state

    function _commands {
        local -a commands
        commands=(
            'about:Get quota information from the remote.'
            'authorize:Remote authorization.'
            'backend:Run a backend-specific command.'
            'bisync:Perform bidirectional synchronization between two paths.'
            'cat:Concatenates any files and sends them to stdout.'
            'check:Checks the files in the source and destination match.'
            'checksum:Checks the files in the source against a SUM file.'
            'cleanup:Clean up the remote if possible.'
            'completion:Generate the autocompletion script for the specified shell'
            'config:Enter an interactive configuration session.'
            'copy:Copy files from source to dest, skipping identical files.'
            'copyto:Copy files from source to dest, skipping identical files.'
            'copyurl:Copy url content to dest.'
            'cryptcheck:Cryptcheck checks the integrity of a crypted remote.'
            'cryptdecode:Cryptdecode returns unencrypted file names.'
            'dedupe:Interactively find duplicate filenames and delete/rename them.'
            'delete:Remove the files in path.'
            'deletefile:Remove a single file from remote.'
            'genautocomplete:Output completion script for a given shell.'
            'gendocs:Output markdown docs for rclone to the directory supplied.'
            'hashsum:Produces a hashsum file for all the objects in the path.'
            'help:Show help for rclone commands, flags and backends.'
            'link:Generate public link to file/folder.'
            'listremotes:List all the remotes in the config file.'
            'ls:List the objects in the path with size and path.'
            'lsd:List all directories/containers/buckets in the path.'
            'lsf:List directories and objects in remote:path formatted for parsing.'
            'lsjson:List directories and objects in the path in JSON format.'
            'lsl:List the objects in path with modification time, size and path.'
            'md5sum:Produces an md5sum file for all the objects in the path.'
            'mkdir:Make the path if it doesn'\''t already exist.'
            'mount:Mount the remote as file system on a mountpoint.'
            'move:Move files from source to dest.'
            'moveto:Move file or directory from source to dest.'
            'ncdu:Explore a remote with a text based user interface.'
            'obscure:Obscure password for use in the rclone config file.'
            'purge:Remove the path and all of its contents.'
            'rc:Run a command against a running rclone.'
            'rcat:Copies standard input to file on remote.'
            'rcd:Run rclone listening to remote control commands only.'
            'rmdir:Remove the empty directory at path.'
            'rmdirs:Remove empty directories under the path.'
            'selfupdate:Update the rclone binary.'
            'serve:Serve a remote over a protocol.'
            'settier:Changes storage class/tier of objects in remote.'
            'sha1sum:Produces an sha1sum file for all the objects in the path.'
            'size:Prints the total size and number of objects in remote:path.'
            'sync:Make source and dest identical, modifying destination only.'
            'test:Run a test command'
            'touch:Create new file or change file modification time.'
            'tree:List the contents of the remote in a tree like fashion.'
            'version:Show the version number.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (about)
            _rclone_about
            ;;

        (authorize)
            _rclone_authorize
            ;;

        (backend)
            _rclone_backend
            ;;

        (bisync)
            _rclone_bisync
            ;;

        (cat)
            _rclone_cat
            ;;

        (check)
            _rclone_check
            ;;

        (checksum)
            _rclone_checksum
            ;;

        (cleanup)
            _rclone_cleanup
            ;;

        (completion)
            _rclone_completion
            ;;

        (config)
            _rclone_config
            ;;

        (copy)
            _rclone_copy
            ;;

        (copyto)
            _rclone_copyto
            ;;

        (copyurl)
            _rclone_copyurl
            ;;

        (cryptcheck)
            _rclone_cryptcheck
            ;;

        (cryptdecode)
            _rclone_cryptdecode
            ;;

        (dedupe)
            _rclone_dedupe
            ;;

        (delete)
            _rclone_delete
            ;;

        (deletefile)
            _rclone_deletefile
            ;;

        (genautocomplete)
            _rclone_genautocomplete
            ;;

        (gendocs)
            _rclone_gendocs
            ;;

        (hashsum)
            _rclone_hashsum
            ;;

        (help)
            _rclone_help
            ;;

        (link)
            _rclone_link
            ;;

        (listremotes)
            _rclone_listremotes
            ;;

        (ls)
            _rclone_ls
            ;;

        (lsd)
            _rclone_lsd
            ;;

        (lsf)
            _rclone_lsf
            ;;

        (lsjson)
            _rclone_lsjson
            ;;

        (lsl)
            _rclone_lsl
            ;;

        (md5sum)
            _rclone_md5sum
            ;;

        (mkdir)
            _rclone_mkdir
            ;;

        (mount)
            _rclone_mount
            ;;

        (move)
            _rclone_move
            ;;

        (moveto)
            _rclone_moveto
            ;;

        (ncdu)
            _rclone_ncdu
            ;;

        (obscure)
            _rclone_obscure
            ;;

        (purge)
            _rclone_purge
            ;;

        (rc)
            _rclone_rc
            ;;

        (rcat)
            _rclone_rcat
            ;;

        (rcd)
            _rclone_rcd
            ;;

        (rmdir)
            _rclone_rmdir
            ;;

        (rmdirs)
            _rclone_rmdirs
            ;;

        (selfupdate)
            _rclone_selfupdate
            ;;

        (serve)
            _rclone_serve
            ;;

        (settier)
            _rclone_settier
            ;;

        (sha1sum)
            _rclone_sha1sum
            ;;

        (size)
            _rclone_size
            ;;

        (sync)
            _rclone_sync
            ;;

        (test)
            _rclone_test
            ;;

        (touch)
            _rclone_touch
            ;;

        (tree)
            _rclone_tree
            ;;

        (version)
            _rclone_version
            ;;

        esac
        ;;
     esac

}

function _rclone_about {
    _arguments \
        '--full[Full numbers instead of human-readable]' \
        {-h,--help}'[help for about]' \
        '--json[Format output as JSON]' \
        "*: :_files"

}

function _rclone_authorize {
    _arguments \
        '--auth-no-open-browser[Do not automatically open auth link in default browser]' \
        {-h,--help}'[help for authorize]' \
        "*: :_files"

}

function _rclone_backend {
    _arguments \
        {-h,--help}'[help for backend]' \
        '--json[Always output in JSON format]' \
        {-o,--option}'[Option in the form name=value or name]' \
        "*: :_files"

}

function _rclone_bisync {
    _arguments \
        '--check-access[Ensure expected RCLONE_TEST files are found on both Path1 and Path2 filesystems, else abort.]' \
        '--check-filename[Filename for --check-access (default: RCLONE_TEST)]' \
        '--check-sync[Controls comparison of final listings: true|false|only (default: true) (default "true")]' \
        '--filters-file[Read filtering patterns from a file]' \
        '--force[Bypass --max-delete safety check and run the sync. Consider using with --verbose]' \
        {-h,--help}'[help for bisync]' \
        '--localtime[Use local time in listings (default: UTC)]' \
        '--no-cleanup[Retain working files (useful for troubleshooting and testing).]' \
        '--remove-empty-dirs[Remove empty directories at the final cleanup step.]' \
        {-1,--resync}'[Performs the resync run. Path1 files may overwrite Path2 versions. Consider using --verbose or --dry-run first.]' \
        '--workdir[Use custom working dir - useful for testing. (default: ~/.cache/rclone/bisync)]' \
        "*: :_files"

}

function _rclone_cat {
    _arguments \
        '--count[Only print N characters (default -1)]' \
        '--discard[Discard the output instead of printing]' \
        '--head[Only print the first N characters]' \
        {-h,--help}'[help for cat]' \
        '--offset[Start printing at offset N (or from end if -ve)]' \
        '--tail[Only print the last N characters]' \
        "*: :_files"

}

function _rclone_check {
    _arguments \
        {-C,--checkfile}'[Treat source:path as a SUM file with hashes of given type]' \
        '--combined[Make a combined report of changes to this file]' \
        '--differ[Report all non-matching files to this file]' \
        '--download[Check by downloading rather than with hash]' \
        '--error[Report all files with errors (hashing or reading) to this file]' \
        {-h,--help}'[help for check]' \
        '--match[Report all matching files to this file]' \
        '--missing-on-dst[Report all files missing from the destination to this file]' \
        '--missing-on-src[Report all files missing from the source to this file]' \
        '--one-way[Check one way only, source files must exist on remote]' \
        "*: :_files"

}

function _rclone_checksum {
    _arguments \
        '--combined[Make a combined report of changes to this file]' \
        '--differ[Report all non-matching files to this file]' \
        '--download[Check by hashing the contents]' \
        '--error[Report all files with errors (hashing or reading) to this file]' \
        {-h,--help}'[help for checksum]' \
        '--match[Report all matching files to this file]' \
        '--missing-on-dst[Report all files missing from the destination to this file]' \
        '--missing-on-src[Report all files missing from the source to this file]' \
        '--one-way[Check one way only, source files must exist on remote]' \
        "*: :_files"

}

function _rclone_cleanup {
    _arguments \
        {-h,--help}'[help for cleanup]' \
        "*: :_files"

}


function _rclone_completion {
    local line state

    function _commands {
        local -a commands
        commands=(
            'bash:Generate the autocompletion script for bash'
            'fish:Generate the autocompletion script for fish'
            'powershell:Generate the autocompletion script for powershell'
            'zsh:Generate the autocompletion script for zsh'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[help for completion]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (bash)
            _rclone_completion_bash
            ;;

        (fish)
            _rclone_completion_fish
            ;;

        (powershell)
            _rclone_completion_powershell
            ;;

        (zsh)
            _rclone_completion_zsh
            ;;

        esac
        ;;
     esac

}

function _rclone_completion_bash {
    _arguments \
        {-h,--help}'[help for bash]' \
        '--no-descriptions[disable completion descriptions]' \
        "*: :_files"

}

function _rclone_completion_fish {
    _arguments \
        {-h,--help}'[help for fish]' \
        '--no-descriptions[disable completion descriptions]' \
        "*: :_files"

}

function _rclone_completion_powershell {
    _arguments \
        {-h,--help}'[help for powershell]' \
        '--no-descriptions[disable completion descriptions]' \
        "*: :_files"

}

function _rclone_completion_zsh {
    _arguments \
        {-h,--help}'[help for zsh]' \
        '--no-descriptions[disable completion descriptions]' \
        "*: :_files"

}


function _rclone_config {
    local line state

    function _commands {
        local -a commands
        commands=(
            'create:Create a new remote with name, type and options.'
            'delete:Delete an existing remote.'
            'disconnect:Disconnects user from remote'
            'dump:Dump the config file as JSON.'
            'file:Show path of configuration file in use.'
            'password:Update password in an existing remote.'
            'paths:Show paths used for configuration, cache, temp etc.'
            'providers:List in JSON format all the providers and options.'
            'reconnect:Re-authenticates user with remote.'
            'show:Print (decrypted) config file, or the config for a single remote.'
            'touch:Ensure configuration file exists.'
            'update:Update options in an existing remote.'
            'userinfo:Prints info about logged in user of remote.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[help for config]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (create)
            _rclone_config_create
            ;;

        (delete)
            _rclone_config_delete
            ;;

        (disconnect)
            _rclone_config_disconnect
            ;;

        (dump)
            _rclone_config_dump
            ;;

        (file)
            _rclone_config_file
            ;;

        (password)
            _rclone_config_password
            ;;

        (paths)
            _rclone_config_paths
            ;;

        (providers)
            _rclone_config_providers
            ;;

        (reconnect)
            _rclone_config_reconnect
            ;;

        (show)
            _rclone_config_show
            ;;

        (touch)
            _rclone_config_touch
            ;;

        (update)
            _rclone_config_update
            ;;

        (userinfo)
            _rclone_config_userinfo
            ;;

        esac
        ;;
     esac

}

function _rclone_config_create {
    _arguments \
        '--all[Ask the full set of config questions]' \
        '--continue[Continue the configuration process with an answer]' \
        {-h,--help}'[help for create]' \
        '--no-obscure[Force any passwords not to be obscured]' \
        '--non-interactive[Don'\''t interact with user and return questions]' \
        '--obscure[Force any passwords to be obscured]' \
        '--result[Result - use with --continue]' \
        '--state[State - use with --continue]' \
        "*: :_files"

}

function _rclone_config_delete {
    _arguments \
        {-h,--help}'[help for delete]' \
        "*: :_files"

}

function _rclone_config_disconnect {
    _arguments \
        {-h,--help}'[help for disconnect]' \
        "*: :_files"

}

function _rclone_config_dump {
    _arguments \
        {-h,--help}'[help for dump]' \
        "*: :_files"

}

function _rclone_config_file {
    _arguments \
        {-h,--help}'[help for file]' \
        "*: :_files"

}

function _rclone_config_password {
    _arguments \
        {-h,--help}'[help for password]' \
        "*: :_files"

}

function _rclone_config_paths {
    _arguments \
        {-h,--help}'[help for paths]' \
        "*: :_files"

}

function _rclone_config_providers {
    _arguments \
        {-h,--help}'[help for providers]' \
        "*: :_files"

}

function _rclone_config_reconnect {
    _arguments \
        {-h,--help}'[help for reconnect]' \
        "*: :_files"

}

function _rclone_config_show {
    _arguments \
        {-h,--help}'[help for show]' \
        "*: :_files"

}

function _rclone_config_touch {
    _arguments \
        {-h,--help}'[help for touch]' \
        "*: :_files"

}

function _rclone_config_update {
    _arguments \
        '--all[Ask the full set of config questions]' \
        '--continue[Continue the configuration process with an answer]' \
        {-h,--help}'[help for update]' \
        '--no-obscure[Force any passwords not to be obscured]' \
        '--non-interactive[Don'\''t interact with user and return questions]' \
        '--obscure[Force any passwords to be obscured]' \
        '--result[Result - use with --continue]' \
        '--state[State - use with --continue]' \
        "*: :_files"

}

function _rclone_config_userinfo {
    _arguments \
        {-h,--help}'[help for userinfo]' \
        '--json[Format output as JSON]' \
        "*: :_files"

}

function _rclone_copy {
    _arguments \
        '--create-empty-src-dirs[Create empty source dirs on destination after copy]' \
        {-h,--help}'[help for copy]' \
        "*: :_files"

}

function _rclone_copyto {
    _arguments \
        {-h,--help}'[help for copyto]' \
        "*: :_files"

}

function _rclone_copyurl {
    _arguments \
        {-a,--auto-filename}'[Get the file name from the URL and use it for destination file path]' \
        '--header-filename[Get the file name from the Content-Disposition header]' \
        {-h,--help}'[help for copyurl]' \
        '--no-clobber[Prevent overwriting file with same name]' \
        {-p,--print-filename}'[Print the resulting name from --auto-filename]' \
        '--stdout[Write the output to stdout rather than a file]' \
        "*: :_files"

}

function _rclone_cryptcheck {
    _arguments \
        '--combined[Make a combined report of changes to this file]' \
        '--differ[Report all non-matching files to this file]' \
        '--error[Report all files with errors (hashing or reading) to this file]' \
        {-h,--help}'[help for cryptcheck]' \
        '--match[Report all matching files to this file]' \
        '--missing-on-dst[Report all files missing from the destination to this file]' \
        '--missing-on-src[Report all files missing from the source to this file]' \
        '--one-way[Check one way only, source files must exist on remote]' \
        "*: :_files"

}

function _rclone_cryptdecode {
    _arguments \
        {-h,--help}'[help for cryptdecode]' \
        '--reverse[Reverse cryptdecode, encrypts filenames]' \
        "*: :_files"

}

function _rclone_dedupe {
    _arguments \
        '--by-hash[Find identical hashes rather than names]' \
        '--dedupe-mode[Dedupe mode interactive|skip|first|newest|oldest|largest|smallest|rename (default "interactive")]' \
        {-h,--help}'[help for dedupe]' \
        "*: :_files"

}

function _rclone_delete {
    _arguments \
        {-h,--help}'[help for delete]' \
        '--rmdirs[rmdirs removes empty directories but leaves root intact]' \
        "*: :_files"

}

function _rclone_deletefile {
    _arguments \
        {-h,--help}'[help for deletefile]' \
        "*: :_files"

}


function _rclone_genautocomplete {
    local line state

    function _commands {
        local -a commands
        commands=(
            'bash:Output bash completion script for rclone.'
            'fish:Output fish completion script for rclone.'
            'zsh:Output zsh completion script for rclone.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[help for genautocomplete]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (bash)
            _rclone_genautocomplete_bash
            ;;

        (fish)
            _rclone_genautocomplete_fish
            ;;

        (zsh)
            _rclone_genautocomplete_zsh
            ;;

        esac
        ;;
     esac

}

function _rclone_genautocomplete_bash {
    _arguments \
        {-h,--help}'[help for bash]' \
        "*: :_files"

}

function _rclone_genautocomplete_fish {
    _arguments \
        {-h,--help}'[help for fish]' \
        "*: :_files"

}

function _rclone_genautocomplete_zsh {
    _arguments \
        {-h,--help}'[help for zsh]' \
        "*: :_files"

}

function _rclone_gendocs {
    _arguments \
        {-h,--help}'[help for gendocs]' \
        "*: :_files"

}

function _rclone_hashsum {
    _arguments \
        '--base64[Output base64 encoded hashsum]' \
        {-C,--checkfile}'[Validate hashes against a given SUM file instead of printing them]' \
        '--download[Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote]' \
        {-h,--help}'[help for hashsum]' \
        '--output-file[Output hashsums to a file rather than the terminal]' \
        "*: :_files"

}


function _rclone_help {
    local line state

    function _commands {
        local -a commands
        commands=(
            'backend:List full info about a backend'
            'backends:List the backends available'
            'flags:Show the global flags for rclone'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[help for help]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (backend)
            _rclone_help_backend
            ;;

        (backends)
            _rclone_help_backends
            ;;

        (flags)
            _rclone_help_flags
            ;;

        esac
        ;;
     esac

}

function _rclone_help_backend {
    _arguments \
        {-h,--help}'[help for backend]' \
        "*: :_files"

}

function _rclone_help_backends {
    _arguments \
        {-h,--help}'[help for backends]' \
        "*: :_files"

}

function _rclone_help_flags {
    _arguments \
        {-h,--help}'[help for flags]' \
        '--ask-password[Allow prompt for password for encrypted configuration (default true)]' \
        '--auto-confirm[If enabled, do not request console confirmation]' \
        '--backup-dir[Make backups into hierarchy based in DIR]' \
        '--bind[Local address to bind to for outgoing connections, IPv4, IPv6 or name]' \
        '--buffer-size[In memory buffer size when reading files for each --transfer (default 16Mi)]' \
        '--bwlimit[Bandwidth limit in KiB/s, or use suffix B|K|M|G|T|P or a full timetable]' \
        '--bwlimit-file[Bandwidth limit per file in KiB/s, or use suffix B|K|M|G|T|P or a full timetable]' \
        '--ca-cert[CA certificate used to verify servers]' \
        '--cache-dir[Directory rclone will use for caching (default "~/.cache/rclone")]' \
        '--check-first[Do all the checks before starting transfers]' \
        '--checkers[Number of checkers to run in parallel (default 8)]' \
        {-c,--checksum}'[Skip based on checksum (if available) & size, not mod-time & size]' \
        '--client-cert[Client SSL certificate (PEM) for mutual TLS auth]' \
        '--client-key[Client SSL private key (PEM) for mutual TLS auth]' \
        '--color[When to show colors (and other ANSI codes) AUTO|NEVER|ALWAYS (default "AUTO")]' \
        '--compare-dest[Include additional comma separated server-side paths during comparison]' \
        '--config[Config file (default "~/.config/rclone/rclone.conf")]' \
        '--contimeout[Connect timeout (default 1m0s)]' \
        '--copy-dest[Implies --compare-dest but also copies files from paths into destination]' \
        '--cpuprofile[Write cpu profile to file]' \
        '--cutoff-mode[Mode to stop transfers when reaching the max transfer limit HARD|SOFT|CAUTIOUS (default "HARD")]' \
        '--delete-after[When synchronizing, delete files on destination after transferring (default)]' \
        '--delete-before[When synchronizing, delete files on destination before transferring]' \
        '--delete-during[When synchronizing, delete files during transfer]' \
        '--delete-excluded[Delete files on dest excluded from sync]' \
        '--disable[Disable a comma separated list of features (use --disable help to see a list)]' \
        '--disable-http-keep-alives[Disable HTTP keep-alives and use each connection once.]' \
        '--disable-http2[Disable HTTP/2 in the global transport]' \
        {-n,--dry-run}'[Do a trial run with no permanent changes]' \
        '--dscp[Set DSCP value to connections, value or name, e.g. CS1, LE, DF, AF21]' \
        '--dump[List of items to dump from: headers,bodies,requests,responses,auth,filters,goroutines,openfiles]' \
        '--dump-bodies[Dump HTTP headers and bodies - may contain sensitive info]' \
        '--dump-headers[Dump HTTP headers - may contain sensitive info]' \
        '--error-on-no-transfer[Sets exit code 9 if no files are transferred, useful in scripts]' \
        '--exclude[Exclude files matching pattern]' \
        '--exclude-from[Read file exclude patterns from file (use - to read from stdin)]' \
        '--exclude-if-present[Exclude directories if filename is present]' \
        '--expect-continue-timeout[Timeout when using expect / 100-continue in HTTP (default 1s)]' \
        '--fast-list[Use recursive list if available; uses more memory but fewer transactions]' \
        '--files-from[Read list of source-file names from file (use - to read from stdin)]' \
        '--files-from-raw[Read list of source-file names from file without any processing of lines (use - to read from stdin)]' \
        {-f,--filter}'[Add a file filtering rule]' \
        '--filter-from[Read file filtering patterns from a file (use - to read from stdin)]' \
        '--fs-cache-expire-duration[Cache remotes for this long (0 to disable caching) (default 5m0s)]' \
        '--fs-cache-expire-interval[Interval to check for expired remotes (default 1m0s)]' \
        '--header[Set HTTP header for all transactions]' \
        '--header-download[Set HTTP header for download transactions]' \
        '--header-upload[Set HTTP header for upload transactions]' \
        '--human-readable[Print numbers in a human-readable format, sizes with suffix Ki|Mi|Gi|Ti|Pi]' \
        '--ignore-case[Ignore case in filters (case insensitive)]' \
        '--ignore-case-sync[Ignore case when synchronizing]' \
        '--ignore-checksum[Skip post copy check of checksums]' \
        '--ignore-errors[Delete even if there are I/O errors]' \
        '--ignore-existing[Skip all files that exist on destination]' \
        '--ignore-size[Ignore size when skipping use mod-time or checksum]' \
        {-I,--ignore-times}'[Don'\''t skip files that match size and time - transfer all files]' \
        '--immutable[Do not modify files, fail if existing files have been modified]' \
        '--include[Include files matching pattern]' \
        '--include-from[Read file include patterns from file (use - to read from stdin)]' \
        {-i,--interactive}'[Enable interactive mode]' \
        '--kv-lock-time[Maximum time to keep key-value database locked by process (default 1s)]' \
        '--log-file[Log everything to this file]' \
        '--log-format[Comma separated list of log format options (default "date,time")]' \
        '--log-level[Log level DEBUG|INFO|NOTICE|ERROR (default "NOTICE")]' \
        '--log-systemd[Activate systemd integration for the logger]' \
        '--low-level-retries[Number of low level retries to do (default 10)]' \
        '--max-age[Only transfer files younger than this in s or suffix ms|s|m|h|d|w|M|y (default off)]' \
        '--max-backlog[Maximum number of objects in sync or check backlog (default 10000)]' \
        '--max-delete[When synchronizing, limit the number of deletes (default -1)]' \
        '--max-depth[If set limits the recursion depth to this (default -1)]' \
        '--max-duration[Maximum duration rclone will transfer data for (default 0s)]' \
        '--max-size[Only transfer files smaller than this in KiB or suffix B|K|M|G|T|P (default off)]' \
        '--max-stats-groups[Maximum number of stats groups to keep in memory, on max oldest is discarded (default 1000)]' \
        '--max-transfer[Maximum size of data to transfer (default off)]' \
        '--memprofile[Write memory profile to file]' \
        {-M,--metadata}'[If set, preserve metadata when copying objects]' \
        '--metadata-exclude[Exclude metadatas matching pattern]' \
        '--metadata-exclude-from[Read metadata exclude patterns from file (use - to read from stdin)]' \
        '--metadata-filter[Add a metadata filtering rule]' \
        '--metadata-filter-from[Read metadata filtering patterns from a file (use - to read from stdin)]' \
        '--metadata-include[Include metadatas matching pattern]' \
        '--metadata-include-from[Read metadata include patterns from file (use - to read from stdin)]' \
        '--metadata-set[Add metadata key=value when uploading]' \
        '--min-age[Only transfer files older than this in s or suffix ms|s|m|h|d|w|M|y (default off)]' \
        '--min-size[Only transfer files bigger than this in KiB or suffix B|K|M|G|T|P (default off)]' \
        '--modify-window[Max time diff to be considered the same (default 1ns)]' \
        '--multi-thread-cutoff[Use multi-thread downloads for files above this size (default 250Mi)]' \
        '--multi-thread-streams[Max number of streams to use for multi-thread downloads (default 4)]' \
        '--no-check-certificate[Do not verify the server SSL certificate (insecure)]' \
        '--no-check-dest[Don'\''t check the destination, copy regardless]' \
        '--no-console[Hide console window (supported on Windows only)]' \
        '--no-gzip-encoding[Don'\''t set Accept-Encoding: gzip]' \
        '--no-traverse[Don'\''t traverse destination file system on copy]' \
        '--no-unicode-normalization[Don'\''t normalize unicode characters in filenames]' \
        '--no-update-modtime[Don'\''t update destination mod-time if files identical]' \
        '--order-by[Instructions on how to order the transfers, e.g. '\''size,descending'\'']' \
        '--password-command[Command for supplying password for encrypted configuration]' \
        {-P,--progress}'[Show progress during transfer]' \
        '--progress-terminal-title[Show progress on the terminal title (requires -P/--progress)]' \
        {-q,--quiet}'[Print as little stuff as possible]' \
        '--rc[Enable the remote control server]' \
        '--rc-addr[IPaddress:Port or :Port to bind server to (default \[localhost:5572\])]' \
        '--rc-allow-origin[Set the allowed origin for CORS]' \
        '--rc-baseurl[Prefix for URLs - leave blank for root]' \
        '--rc-cert[TLS PEM key (concatenation of certificate and CA certificate)]' \
        '--rc-client-ca[Client certificate authority to verify clients with]' \
        '--rc-enable-metrics[Enable prometheus metrics on /metrics]' \
        '--rc-files[Path to local files to serve on the HTTP server]' \
        '--rc-htpasswd[A htpasswd file - if not provided no authentication is done]' \
        '--rc-job-expire-duration[Expire finished async jobs older than this value (default 1m0s)]' \
        '--rc-job-expire-interval[Interval to check for expired async jobs (default 10s)]' \
        '--rc-key[TLS PEM Private key]' \
        '--rc-max-header-bytes[Maximum size of request header (default 4096)]' \
        '--rc-min-tls-version[Minimum TLS version that is acceptable (default "tls1.0")]' \
        '--rc-no-auth[Don'\''t require auth for certain methods]' \
        '--rc-pass[Password for authentication]' \
        '--rc-realm[Realm for authentication]' \
        '--rc-salt[Password hashing salt (default "dlPL2MqE")]' \
        '--rc-serve[Enable the serving of remote objects]' \
        '--rc-server-read-timeout[Timeout for server reading data (default 1h0m0s)]' \
        '--rc-server-write-timeout[Timeout for server writing data (default 1h0m0s)]' \
        '--rc-template[User-specified template]' \
        '--rc-user[User name for authentication]' \
        '--rc-web-fetch-url[URL to fetch the releases for webgui (default "https://api.github.com/repos/rclone/rclone-webui-react/releases/latest")]' \
        '--rc-web-gui[Launch WebGUI on localhost]' \
        '--rc-web-gui-force-update[Force update to latest version of web gui]' \
        '--rc-web-gui-no-open-browser[Don'\''t open the browser automatically]' \
        '--rc-web-gui-update[Check and update to latest version of web gui]' \
        '--refresh-times[Refresh the modtime of remote files]' \
        '--retries[Retry operations this many times if they fail (default 3)]' \
        '--retries-sleep[Interval between retrying operations if they fail, e.g. 500ms, 60s, 5m (0 to disable) (default 0s)]' \
        '--server-side-across-configs[Allow server-side operations (e.g. copy) to work across different configs]' \
        '--size-only[Skip based on size only, not mod-time or checksum]' \
        '--stats[Interval between printing stats, e.g. 500ms, 60s, 5m (0 to disable) (default 1m0s)]' \
        '--stats-file-name-length[Max file name length in stats (0 for no limit) (default 45)]' \
        '--stats-log-level[Log level to show --stats output DEBUG|INFO|NOTICE|ERROR (default "INFO")]' \
        '--stats-one-line[Make the stats fit on one line]' \
        '--stats-one-line-date[Enable --stats-one-line and add current date/time prefix]' \
        '--stats-one-line-date-format[Enable --stats-one-line-date and use custom formatted date: Enclose date string in double quotes ("), see https://golang.org/pkg/time/#Time.Format]' \
        '--stats-unit[Show data rate in stats as either '\''bits'\'' or '\''bytes'\'' per second (default "bytes")]' \
        '--streaming-upload-cutoff[Cutoff for switching to chunked upload if file size is unknown, upload starts after reaching cutoff or when file ends (default 100Ki)]' \
        '--suffix[Suffix to add to changed files]' \
        '--suffix-keep-extension[Preserve the extension when using --suffix]' \
        '--syslog[Use Syslog for logging]' \
        '--syslog-facility[Facility for syslog, e.g. KERN,USER,... (default "DAEMON")]' \
        '--temp-dir[Directory rclone will use for temporary files (default "/tmp")]' \
        '--timeout[IO idle timeout (default 5m0s)]' \
        '--tpslimit[Limit HTTP transactions per second to this]' \
        '--tpslimit-burst[Max burst of transactions for --tpslimit (default 1)]' \
        '--track-renames[When synchronizing, track file renames and do a server-side move if possible]' \
        '--track-renames-strategy[Strategies to use when synchronizing using track-renames hash|modtime|leaf (default "hash")]' \
        '--transfers[Number of file transfers to run in parallel (default 4)]' \
        {-u,--update}'[Skip files that are newer on the destination]' \
        '--use-cookies[Enable session cookiejar]' \
        '--use-json-log[Use json log format]' \
        '--use-mmap[Use mmap allocator (see docs)]' \
        '--use-server-modtime[Use server modified time instead of object metadata]' \
        '--user-agent[Set the user-agent to a specified string (default "rclone/")]' \
        {-v,--verbose}'[Print lots more stuff (repeat for more)]' \
        '--acd-auth-url[Auth server URL]' \
        '--acd-client-id[OAuth Client Id]' \
        '--acd-client-secret[OAuth Client Secret]' \
        '--acd-encoding[The encoding for the backend (default Slash,InvalidUtf8,Dot)]' \
        '--acd-templink-threshold[Files >= this size will be downloaded via their tempLink (default 9Gi)]' \
        '--acd-token[OAuth Access Token as a JSON blob]' \
        '--acd-token-url[Token server url]' \
        '--acd-upload-wait-per-gb[Additional time per GiB to wait after a failed complete upload to see if it appears (default 3m0s)]' \
        '--alias-remote[Remote or path to alias]' \
        '--azureblob-access-tier[Access tier of blob: hot, cool or archive]' \
        '--azureblob-account[Azure Storage Account Name]' \
        '--azureblob-archive-tier-delete[Delete archive tier blobs before overwriting]' \
        '--azureblob-chunk-size[Upload chunk size (default 4Mi)]' \
        '--azureblob-client-certificate-password[Password for the certificate file (optional) (obscured)]' \
        '--azureblob-client-certificate-path[Path to a PEM or PKCS12 certificate file including the private key]' \
        '--azureblob-client-id[The ID of the client in use]' \
        '--azureblob-client-secret[One of the service principal'\''s client secrets]' \
        '--azureblob-client-send-certificate-chain[Send the certificate chain when using certificate auth]' \
        '--azureblob-disable-checksum[Don'\''t store MD5 checksum with object metadata]' \
        '--azureblob-encoding[The encoding for the backend (default Slash,BackSlash,Del,Ctl,RightPeriod,InvalidUtf8)]' \
        '--azureblob-endpoint[Endpoint for the service]' \
        '--azureblob-env-auth[Read credentials from runtime (environment variables, CLI or MSI)]' \
        '--azureblob-key[Storage Account Shared Key]' \
        '--azureblob-list-chunk[Size of blob list (default 5000)]' \
        '--azureblob-memory-pool-flush-time[How often internal memory buffer pools will be flushed (default 1m0s)]' \
        '--azureblob-memory-pool-use-mmap[Whether to use mmap buffers in internal memory pool]' \
        '--azureblob-msi-client-id[Object ID of the user-assigned MSI to use, if any]' \
        '--azureblob-msi-mi-res-id[Azure resource ID of the user-assigned MSI to use, if any]' \
        '--azureblob-msi-object-id[Object ID of the user-assigned MSI to use, if any]' \
        '--azureblob-no-check-container[If set, don'\''t attempt to check the container exists or create it]' \
        '--azureblob-no-head-object[If set, do not do HEAD before GET when getting objects]' \
        '--azureblob-password[The user'\''s password (obscured)]' \
        '--azureblob-public-access[Public access level of a container: blob or container]' \
        '--azureblob-sas-url[SAS URL for container level access only]' \
        '--azureblob-service-principal-file[Path to file containing credentials for use with a service principal]' \
        '--azureblob-tenant[ID of the service principal'\''s tenant. Also called its directory ID]' \
        '--azureblob-upload-concurrency[Concurrency for multipart uploads (default 16)]' \
        '--azureblob-upload-cutoff[Cutoff for switching to chunked upload (<= 256 MiB) (deprecated)]' \
        '--azureblob-use-emulator[Uses local storage emulator if provided as '\''true'\'']' \
        '--azureblob-use-msi[Use a managed service identity to authenticate (only works in Azure)]' \
        '--azureblob-username[User name (usually an email address)]' \
        '--b2-account[Account ID or Application Key ID]' \
        '--b2-chunk-size[Upload chunk size (default 96Mi)]' \
        '--b2-copy-cutoff[Cutoff for switching to multipart copy (default 4Gi)]' \
        '--b2-disable-checksum[Disable checksums for large (> upload cutoff) files]' \
        '--b2-download-auth-duration[Time before the authorization token will expire in s or suffix ms|s|m|h|d (default 1w)]' \
        '--b2-download-url[Custom endpoint for downloads]' \
        '--b2-encoding[The encoding for the backend (default Slash,BackSlash,Del,Ctl,InvalidUtf8,Dot)]' \
        '--b2-endpoint[Endpoint for the service]' \
        '--b2-hard-delete[Permanently delete files on remote removal, otherwise hide files]' \
        '--b2-key[Application Key]' \
        '--b2-memory-pool-flush-time[How often internal memory buffer pools will be flushed (default 1m0s)]' \
        '--b2-memory-pool-use-mmap[Whether to use mmap buffers in internal memory pool]' \
        '--b2-test-mode[A flag string for X-Bz-Test-Mode header for debugging]' \
        '--b2-upload-cutoff[Cutoff for switching to chunked upload (default 200Mi)]' \
        '--b2-version-at[Show file versions as they were at the specified time (default off)]' \
        '--b2-versions[Include old versions in directory listings]' \
        '--box-access-token[Box App Primary Access Token]' \
        '--box-auth-url[Auth server URL]' \
        '--box-box-config-file[Box App config.json location]' \
        '--box-box-sub-type[(default "user")]' \
        '--box-client-id[OAuth Client Id]' \
        '--box-client-secret[OAuth Client Secret]' \
        '--box-commit-retries[Max number of times to try committing a multipart file (default 100)]' \
        '--box-encoding[The encoding for the backend (default Slash,BackSlash,Del,Ctl,RightSpace,InvalidUtf8,Dot)]' \
        '--box-list-chunk[Size of listing chunk 1-1000 (default 1000)]' \
        '--box-owned-by[Only show items owned by the login (email address) passed in]' \
        '--box-root-folder-id[Fill in for rclone to use a non root folder as its starting point]' \
        '--box-token[OAuth Access Token as a JSON blob]' \
        '--box-token-url[Token server url]' \
        '--box-upload-cutoff[Cutoff for switching to multipart upload (>= 50 MiB) (default 50Mi)]' \
        '--cache-chunk-clean-interval[How often should the cache perform cleanups of the chunk storage (default 1m0s)]' \
        '--cache-chunk-no-memory[Disable the in-memory cache for storing chunks during streaming]' \
        '--cache-chunk-path[Directory to cache chunk files (default "~/.cache/rclone/cache-backend")]' \
        '--cache-chunk-size[The size of a chunk (partial file data) (default 5Mi)]' \
        '--cache-chunk-total-size[The total size that the chunks can take up on the local disk (default 10Gi)]' \
        '--cache-db-path[Directory to store file structure metadata DB (default "~/.cache/rclone/cache-backend")]' \
        '--cache-db-purge[Clear all the cached data for this remote on start]' \
        '--cache-db-wait-time[How long to wait for the DB to be available - 0 is unlimited (default 1s)]' \
        '--cache-info-age[How long to cache file structure information (directory listings, file size, times, etc.) (default 6h0m0s)]' \
        '--cache-plex-insecure[Skip all certificate verification when connecting to the Plex server]' \
        '--cache-plex-password[The password of the Plex user (obscured)]' \
        '--cache-plex-url[The URL of the Plex server]' \
        '--cache-plex-username[The username of the Plex user]' \
        '--cache-read-retries[How many times to retry a read from a cache storage (default 10)]' \
        '--cache-remote[Remote to cache]' \
        '--cache-rps[Limits the number of requests per second to the source FS (-1 to disable) (default -1)]' \
        '--cache-tmp-upload-path[Directory to keep temporary files until they are uploaded]' \
        '--cache-tmp-wait-time[How long should files be stored in local cache before being uploaded (default 15s)]' \
        '--cache-workers[How many workers should run in parallel to download chunks (default 4)]' \
        '--cache-writes[Cache file data on writes through the FS]' \
        '--chunker-chunk-size[Files larger than chunk size will be split in chunks (default 2Gi)]' \
        '--chunker-fail-hard[Choose how chunker should handle files with missing or invalid chunks]' \
        '--chunker-hash-type[Choose how chunker handles hash sums (default "md5")]' \
        '--chunker-remote[Remote to chunk/unchunk]' \
        '--combine-upstreams[Upstreams for combining]' \
        '--compress-level[GZIP compression level (-2 to 9) (default -1)]' \
        '--compress-mode[Compression mode (default "gzip")]' \
        '--compress-ram-cache-limit[Some remotes don'\''t allow the upload of files with unknown size (default 20Mi)]' \
        '--compress-remote[Remote to compress]' \
        {-L,--copy-links}'[Follow symlinks and copy the pointed to item]' \
        '--crypt-directory-name-encryption[Option to either encrypt directory names or leave them intact (default true)]' \
        '--crypt-filename-encoding[How to encode the encrypted filename to text string (default "base32")]' \
        '--crypt-filename-encryption[How to encrypt the filenames (default "standard")]' \
        '--crypt-no-data-encryption[Option to either encrypt file data or leave it unencrypted]' \
        '--crypt-password[Password or pass phrase for encryption (obscured)]' \
        '--crypt-password2[Password or pass phrase for salt (obscured)]' \
        '--crypt-remote[Remote to encrypt/decrypt]' \
        '--crypt-server-side-across-configs[Allow server-side operations (e.g. copy) to work across different crypt configs]' \
        '--crypt-show-mapping[For all files listed show how the names encrypt]' \
        '--drive-acknowledge-abuse[Set to allow files which return cannotDownloadAbusiveFile to be downloaded]' \
        '--drive-allow-import-name-change[Allow the filetype to change when uploading Google docs]' \
        '--drive-auth-owner-only[Only consider files owned by the authenticated user]' \
        '--drive-auth-url[Auth server URL]' \
        '--drive-chunk-size[Upload chunk size (default 8Mi)]' \
        '--drive-client-id[Google Application Client Id]' \
        '--drive-client-secret[OAuth Client Secret]' \
        '--drive-copy-shortcut-content[Server side copy contents of shortcuts instead of the shortcut]' \
        '--drive-disable-http2[Disable drive using http2 (default true)]' \
        '--drive-encoding[The encoding for the backend (default InvalidUtf8)]' \
        '--drive-export-formats[Comma separated list of preferred formats for downloading Google docs (default "docx,xlsx,pptx,svg")]' \
        '--drive-formats[Deprecated: See export_formats]' \
        '--drive-impersonate[Impersonate this user when using a service account]' \
        '--drive-import-formats[Comma separated list of preferred formats for uploading Google docs]' \
        '--drive-keep-revision-forever[Keep new head revision of each file forever]' \
        '--drive-list-chunk[Size of listing chunk 100-1000, 0 to disable (default 1000)]' \
        '--drive-pacer-burst[Number of API calls to allow without sleeping (default 100)]' \
        '--drive-pacer-min-sleep[Minimum time to sleep between API calls (default 100ms)]' \
        '--drive-resource-key[Resource key for accessing a link-shared file]' \
        '--drive-root-folder-id[ID of the root folder]' \
        '--drive-scope[Scope that rclone should use when requesting access from drive]' \
        '--drive-server-side-across-configs[Allow server-side operations (e.g. copy) to work across different drive configs]' \
        '--drive-service-account-credentials[Service Account Credentials JSON blob]' \
        '--drive-service-account-file[Service Account Credentials JSON file path]' \
        '--drive-shared-with-me[Only show files that are shared with me]' \
        '--drive-size-as-quota[Show sizes as storage quota usage, not actual size]' \
        '--drive-skip-checksum-gphotos[Skip MD5 checksum on Google photos and videos only]' \
        '--drive-skip-dangling-shortcuts[If set skip dangling shortcut files]' \
        '--drive-skip-gdocs[Skip google documents in all listings]' \
        '--drive-skip-shortcuts[If set skip shortcut files]' \
        '--drive-starred-only[Only show files that are starred]' \
        '--drive-stop-on-download-limit[Make download limit errors be fatal]' \
        '--drive-stop-on-upload-limit[Make upload limit errors be fatal]' \
        '--drive-team-drive[ID of the Shared Drive (Team Drive)]' \
        '--drive-token[OAuth Access Token as a JSON blob]' \
        '--drive-token-url[Token server url]' \
        '--drive-trashed-only[Only show files that are in the trash]' \
        '--drive-upload-cutoff[Cutoff for switching to chunked upload (default 8Mi)]' \
        '--drive-use-created-date[Use file created date instead of modified date]' \
        '--drive-use-shared-date[Use date file was shared instead of modified date]' \
        '--drive-use-trash[Send files to the trash instead of deleting permanently (default true)]' \
        '--drive-v2-download-min-size[If Object'\''s are greater, use drive v2 API to download (default off)]' \
        '--dropbox-auth-url[Auth server URL]' \
        '--dropbox-batch-commit-timeout[Max time to wait for a batch to finish committing (default 10m0s)]' \
        '--dropbox-batch-mode[Upload file batching sync|async|off (default "sync")]' \
        '--dropbox-batch-size[Max number of files in upload batch]' \
        '--dropbox-batch-timeout[Max time to allow an idle upload batch before uploading (default 0s)]' \
        '--dropbox-chunk-size[Upload chunk size (< 150Mi) (default 48Mi)]' \
        '--dropbox-client-id[OAuth Client Id]' \
        '--dropbox-client-secret[OAuth Client Secret]' \
        '--dropbox-encoding[The encoding for the backend (default Slash,BackSlash,Del,RightSpace,InvalidUtf8,Dot)]' \
        '--dropbox-impersonate[Impersonate this user when using a business account]' \
        '--dropbox-shared-files[Instructs rclone to work on individual shared files]' \
        '--dropbox-shared-folders[Instructs rclone to work on shared folders]' \
        '--dropbox-token[OAuth Access Token as a JSON blob]' \
        '--dropbox-token-url[Token server url]' \
        '--fichier-api-key[Your API Key, get it from https://1fichier.com/console/params.pl]' \
        '--fichier-encoding[The encoding for the backend (default Slash,LtGt,DoubleQuote,SingleQuote,BackQuote,Dollar,BackSlash,Del,Ctl,LeftSpace,RightSpace,InvalidUtf8,Dot)]' \
        '--fichier-file-password[If you want to download a shared file that is password protected, add this parameter (obscured)]' \
        '--fichier-folder-password[If you want to list the files in a shared folder that is password protected, add this parameter (obscured)]' \
        '--fichier-shared-folder[If you want to download a shared folder, add this parameter]' \
        '--filefabric-encoding[The encoding for the backend (default Slash,Del,Ctl,InvalidUtf8,Dot)]' \
        '--filefabric-permanent-token[Permanent Authentication Token]' \
        '--filefabric-root-folder-id[ID of the root folder]' \
        '--filefabric-token[Session Token]' \
        '--filefabric-token-expiry[Token expiry time]' \
        '--filefabric-url[URL of the Enterprise File Fabric to connect to]' \
        '--filefabric-version[Version read from the file fabric]' \
        '--ftp-ask-password[Allow asking for FTP password when needed]' \
        '--ftp-close-timeout[Maximum time to wait for a response to close (default 1m0s)]' \
        '--ftp-concurrency[Maximum number of FTP simultaneous connections, 0 for unlimited]' \
        '--ftp-disable-epsv[Disable using EPSV even if server advertises support]' \
        '--ftp-disable-mlsd[Disable using MLSD even if server advertises support]' \
        '--ftp-disable-tls13[Disable TLS 1.3 (workaround for FTP servers with buggy TLS)]' \
        '--ftp-disable-utf8[Disable using UTF-8 even if server advertises support]' \
        '--ftp-encoding[The encoding for the backend (default Slash,Del,Ctl,RightSpace,Dot)]' \
        '--ftp-explicit-tls[Use Explicit FTPS (FTP over TLS)]' \
        '--ftp-force-list-hidden[Use LIST -a to force listing of hidden files and folders. This will disable the use of MLSD]' \
        '--ftp-host[FTP host to connect to]' \
        '--ftp-idle-timeout[Max time before closing idle connections (default 1m0s)]' \
        '--ftp-no-check-certificate[Do not verify the TLS certificate of the server]' \
        '--ftp-pass[FTP password (obscured)]' \
        '--ftp-port[FTP port number (default 21)]' \
        '--ftp-shut-timeout[Maximum time to wait for data connection closing status (default 1m0s)]' \
        '--ftp-tls[Use Implicit FTPS (FTP over TLS)]' \
        '--ftp-tls-cache-size[Size of TLS session cache for all control and data connections (default 32)]' \
        '--ftp-user[FTP username (default "vierbein")]' \
        '--ftp-writing-mdtm[Use MDTM to set modification time (VsFtpd quirk)]' \
        '--gcs-anonymous[Access public buckets and objects without credentials]' \
        '--gcs-auth-url[Auth server URL]' \
        '--gcs-bucket-acl[Access Control List for new buckets]' \
        '--gcs-bucket-policy-only[Access checks should use bucket-level IAM policies]' \
        '--gcs-client-id[OAuth Client Id]' \
        '--gcs-client-secret[OAuth Client Secret]' \
        '--gcs-decompress[If set this will decompress gzip encoded objects]' \
        '--gcs-encoding[The encoding for the backend (default Slash,CrLf,InvalidUtf8,Dot)]' \
        '--gcs-endpoint[Endpoint for the service]' \
        '--gcs-location[Location for the newly created buckets]' \
        '--gcs-no-check-bucket[If set, don'\''t attempt to check the bucket exists or create it]' \
        '--gcs-object-acl[Access Control List for new objects]' \
        '--gcs-project-number[Project number]' \
        '--gcs-service-account-file[Service Account Credentials JSON file path]' \
        '--gcs-storage-class[The storage class to use when storing objects in Google Cloud Storage]' \
        '--gcs-token[OAuth Access Token as a JSON blob]' \
        '--gcs-token-url[Token server url]' \
        '--gphotos-auth-url[Auth server URL]' \
        '--gphotos-client-id[OAuth Client Id]' \
        '--gphotos-client-secret[OAuth Client Secret]' \
        '--gphotos-encoding[The encoding for the backend (default Slash,CrLf,InvalidUtf8,Dot)]' \
        '--gphotos-include-archived[Also view and download archived media]' \
        '--gphotos-read-only[Set to make the Google Photos backend read only]' \
        '--gphotos-read-size[Set to read the size of media items]' \
        '--gphotos-start-year[Year limits the photos to be downloaded to those which are uploaded after the given year (default 2000)]' \
        '--gphotos-token[OAuth Access Token as a JSON blob]' \
        '--gphotos-token-url[Token server url]' \
        '--hasher-auto-size[Auto-update checksum for files smaller than this size (disabled by default)]' \
        '--hasher-hashes[Comma separated list of supported checksum types (default md5,sha1)]' \
        '--hasher-max-age[Maximum time to keep checksums in cache (0 = no cache, off = cache forever) (default off)]' \
        '--hasher-remote[Remote to cache checksums for (e.g. myRemote:path)]' \
        '--hdfs-data-transfer-protection[Kerberos data transfer protection: authentication|integrity|privacy]' \
        '--hdfs-encoding[The encoding for the backend (default Slash,Colon,Del,Ctl,InvalidUtf8,Dot)]' \
        '--hdfs-namenode[Hadoop name node and port]' \
        '--hdfs-service-principal-name[Kerberos service principal name for the namenode]' \
        '--hdfs-username[Hadoop user name]' \
        '--hidrive-auth-url[Auth server URL]' \
        '--hidrive-chunk-size[Chunksize for chunked uploads (default 48Mi)]' \
        '--hidrive-client-id[OAuth Client Id]' \
        '--hidrive-client-secret[OAuth Client Secret]' \
        '--hidrive-disable-fetching-member-count[Do not fetch number of objects in directories unless it is absolutely necessary]' \
        '--hidrive-encoding[The encoding for the backend (default Slash,Dot)]' \
        '--hidrive-endpoint[Endpoint for the service (default "https://api.hidrive.strato.com/2.1")]' \
        '--hidrive-root-prefix[The root/parent folder for all paths (default "/")]' \
        '--hidrive-scope-access[Access permissions that rclone should use when requesting access from HiDrive (default "rw")]' \
        '--hidrive-scope-role[User-level that rclone should use when requesting access from HiDrive (default "user")]' \
        '--hidrive-token[OAuth Access Token as a JSON blob]' \
        '--hidrive-token-url[Token server url]' \
        '--hidrive-upload-concurrency[Concurrency for chunked uploads (default 4)]' \
        '--hidrive-upload-cutoff[Cutoff/Threshold for chunked uploads (default 96Mi)]' \
        '--http-headers[Set HTTP headers for all transactions]' \
        '--http-no-head[Don'\''t use HEAD requests]' \
        '--http-no-slash[Set this if the site doesn'\''t end directories with /]' \
        '--http-url[URL of HTTP host to connect to]' \
        '--internetarchive-access-key-id[IAS3 Access Key]' \
        '--internetarchive-disable-checksum[Don'\''t ask the server to test against MD5 checksum calculated by rclone (default true)]' \
        '--internetarchive-encoding[The encoding for the backend (default Slash,LtGt,CrLf,Del,Ctl,InvalidUtf8,Dot)]' \
        '--internetarchive-endpoint[IAS3 Endpoint (default "https://s3.us.archive.org")]' \
        '--internetarchive-front-endpoint[Host of InternetArchive Frontend (default "https://archive.org")]' \
        '--internetarchive-secret-access-key[IAS3 Secret Key (password)]' \
        '--internetarchive-wait-archive[Timeout for waiting the server'\''s processing tasks (specifically archive and book_op) to finish (default 0s)]' \
        '--jottacloud-encoding[The encoding for the backend (default Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,Del,Ctl,InvalidUtf8,Dot)]' \
        '--jottacloud-hard-delete[Delete files permanently rather than putting them into the trash]' \
        '--jottacloud-md5-memory-limit[Files bigger than this will be cached on disk to calculate the MD5 if required (default 10Mi)]' \
        '--jottacloud-no-versions[Avoid server side versioning by deleting files and recreating files instead of overwriting them]' \
        '--jottacloud-trashed-only[Only show files that are in the trash]' \
        '--jottacloud-upload-resume-limit[Files bigger than this can be resumed if the upload fail'\''s (default 10Mi)]' \
        '--koofr-encoding[The encoding for the backend (default Slash,BackSlash,Del,Ctl,InvalidUtf8,Dot)]' \
        '--koofr-endpoint[The Koofr API endpoint to use]' \
        '--koofr-mountid[Mount ID of the mount to use]' \
        '--koofr-password[Your password for rclone (generate one at https://app.koofr.net/app/admin/preferences/password) (obscured)]' \
        '--koofr-provider[Choose your storage provider]' \
        '--koofr-setmtime[Does the backend support setting modification time (default true)]' \
        '--koofr-user[Your user name]' \
        {-l,--links}'[Translate symlinks to/from regular files with a '\''.rclonelink'\'' extension]' \
        '--local-case-insensitive[Force the filesystem to report itself as case insensitive]' \
        '--local-case-sensitive[Force the filesystem to report itself as case sensitive]' \
        '--local-encoding[The encoding for the backend (default Slash,Dot)]' \
        '--local-no-check-updated[Don'\''t check to see if the files change during upload]' \
        '--local-no-preallocate[Disable preallocation of disk space for transferred files]' \
        '--local-no-set-modtime[Disable setting modtime]' \
        '--local-no-sparse[Disable sparse files for multi-thread downloads]' \
        '--local-nounc[Disable UNC (long path names) conversion on Windows]' \
        '--local-unicode-normalization[Apply unicode NFC normalization to paths and filenames]' \
        '--local-zero-size-links[Assume the Stat size of links is zero (and read them instead) (deprecated)]' \
        '--mailru-check-hash[What should copy do if file checksum is mismatched or invalid (default true)]' \
        '--mailru-encoding[The encoding for the backend (default Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,BackSlash,Del,Ctl,InvalidUtf8,Dot)]' \
        '--mailru-pass[Password (obscured)]' \
        '--mailru-speedup-enable[Skip full upload if there is another file with same data hash (default true)]' \
        '--mailru-speedup-file-patterns[Comma separated list of file name patterns eligible for speedup (put by hash) (default "*.mkv,*.avi,*.mp4,*.mp3,*.zip,*.gz,*.rar,*.pdf")]' \
        '--mailru-speedup-max-disk[This option allows you to disable speedup (put by hash) for large files (default 3Gi)]' \
        '--mailru-speedup-max-memory[Files larger than the size given below will always be hashed on disk (default 32Mi)]' \
        '--mailru-user[User name (usually email)]' \
        '--mega-debug[Output more debug from Mega]' \
        '--mega-encoding[The encoding for the backend (default Slash,InvalidUtf8,Dot)]' \
        '--mega-hard-delete[Delete files permanently rather than putting them into the trash]' \
        '--mega-pass[Password (obscured)]' \
        '--mega-user[User name]' \
        '--netstorage-account[Set the NetStorage account name]' \
        '--netstorage-host[Domain+path of NetStorage host to connect to]' \
        '--netstorage-protocol[Select between HTTP or HTTPS protocol (default "https")]' \
        '--netstorage-secret[Set the NetStorage account secret/G2O key for authentication (obscured)]' \
        {-x,--one-file-system}'[Don'\''t cross filesystem boundaries (unix/macOS only)]' \
        '--onedrive-access-scopes[Set scopes to be requested by rclone (default Files.Read Files.ReadWrite Files.Read.All Files.ReadWrite.All Sites.Read.All offline_access)]' \
        '--onedrive-auth-url[Auth server URL]' \
        '--onedrive-chunk-size[Chunk size to upload files with - must be multiple of 320k (327,680 bytes) (default 10Mi)]' \
        '--onedrive-client-id[OAuth Client Id]' \
        '--onedrive-client-secret[OAuth Client Secret]' \
        '--onedrive-drive-id[The ID of the drive to use]' \
        '--onedrive-drive-type[The type of the drive (personal | business | documentLibrary)]' \
        '--onedrive-encoding[The encoding for the backend (default Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,BackSlash,Del,Ctl,LeftSpace,LeftTilde,RightSpace,RightPeriod,InvalidUtf8,Dot)]' \
        '--onedrive-expose-onenote-files[Set to make OneNote files show up in directory listings]' \
        '--onedrive-link-password[Set the password for links created by the link command]' \
        '--onedrive-link-scope[Set the scope of the links created by the link command (default "anonymous")]' \
        '--onedrive-link-type[Set the type of the links created by the link command (default "view")]' \
        '--onedrive-list-chunk[Size of listing chunk (default 1000)]' \
        '--onedrive-no-versions[Remove all versions on modifying operations]' \
        '--onedrive-region[Choose national cloud region for OneDrive (default "global")]' \
        '--onedrive-root-folder-id[ID of the root folder]' \
        '--onedrive-server-side-across-configs[Allow server-side operations (e.g. copy) to work across different onedrive configs]' \
        '--onedrive-token[OAuth Access Token as a JSON blob]' \
        '--onedrive-token-url[Token server url]' \
        '--oos-chunk-size[Chunk size to use for uploading (default 5Mi)]' \
        '--oos-compartment[Object storage compartment OCID]' \
        '--oos-config-file[Path to OCI config file (default "~/.oci/config")]' \
        '--oos-config-profile[Profile name inside the oci config file (default "Default")]' \
        '--oos-copy-cutoff[Cutoff for switching to multipart copy (default 4.656Gi)]' \
        '--oos-copy-timeout[Timeout for copy (default 1m0s)]' \
        '--oos-disable-checksum[Don'\''t store MD5 checksum with object metadata]' \
        '--oos-encoding[The encoding for the backend (default Slash,InvalidUtf8,Dot)]' \
        '--oos-endpoint[Endpoint for Object storage API]' \
        '--oos-leave-parts-on-error[If true avoid calling abort upload on a failure, leaving all successfully uploaded parts on S3 for manual recovery]' \
        '--oos-namespace[Object storage namespace]' \
        '--oos-no-check-bucket[If set, don'\''t attempt to check the bucket exists or create it]' \
        '--oos-provider[Choose your Auth Provider (default "env_auth")]' \
        '--oos-region[Object storage Region]' \
        '--oos-upload-concurrency[Concurrency for multipart uploads (default 10)]' \
        '--oos-upload-cutoff[Cutoff for switching to chunked upload (default 200Mi)]' \
        '--opendrive-chunk-size[Files will be uploaded in chunks this size (default 10Mi)]' \
        '--opendrive-encoding[The encoding for the backend (default Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,BackSlash,LeftSpace,LeftCrLfHtVt,RightSpace,RightCrLfHtVt,InvalidUtf8,Dot)]' \
        '--opendrive-password[Password (obscured)]' \
        '--opendrive-username[Username]' \
        '--pcloud-auth-url[Auth server URL]' \
        '--pcloud-client-id[OAuth Client Id]' \
        '--pcloud-client-secret[OAuth Client Secret]' \
        '--pcloud-encoding[The encoding for the backend (default Slash,BackSlash,Del,Ctl,InvalidUtf8,Dot)]' \
        '--pcloud-hostname[Hostname to connect to (default "api.pcloud.com")]' \
        '--pcloud-password[Your pcloud password (obscured)]' \
        '--pcloud-root-folder-id[Fill in for rclone to use a non root folder as its starting point (default "d0")]' \
        '--pcloud-token[OAuth Access Token as a JSON blob]' \
        '--pcloud-token-url[Token server url]' \
        '--pcloud-username[Your pcloud username]' \
        '--premiumizeme-encoding[The encoding for the backend (default Slash,DoubleQuote,BackSlash,Del,Ctl,InvalidUtf8,Dot)]' \
        '--putio-encoding[The encoding for the backend (default Slash,BackSlash,Del,Ctl,InvalidUtf8,Dot)]' \
        '--qingstor-access-key-id[QingStor Access Key ID]' \
        '--qingstor-chunk-size[Chunk size to use for uploading (default 4Mi)]' \
        '--qingstor-connection-retries[Number of connection retries (default 3)]' \
        '--qingstor-encoding[The encoding for the backend (default Slash,Ctl,InvalidUtf8)]' \
        '--qingstor-endpoint[Enter an endpoint URL to connection QingStor API]' \
        '--qingstor-env-auth[Get QingStor credentials from runtime]' \
        '--qingstor-secret-access-key[QingStor Secret Access Key (password)]' \
        '--qingstor-upload-concurrency[Concurrency for multipart uploads (default 1)]' \
        '--qingstor-upload-cutoff[Cutoff for switching to chunked upload (default 200Mi)]' \
        '--qingstor-zone[Zone to connect to]' \
        '--s3-access-key-id[AWS Access Key ID]' \
        '--s3-acl[Canned ACL used when creating buckets and storing or copying objects]' \
        '--s3-bucket-acl[Canned ACL used when creating buckets]' \
        '--s3-chunk-size[Chunk size to use for uploading (default 5Mi)]' \
        '--s3-copy-cutoff[Cutoff for switching to multipart copy (default 4.656Gi)]' \
        '--s3-decompress[If set this will decompress gzip encoded objects]' \
        '--s3-disable-checksum[Don'\''t store MD5 checksum with object metadata]' \
        '--s3-disable-http2[Disable usage of http2 for S3 backends]' \
        '--s3-download-url[Custom endpoint for downloads]' \
        '--s3-encoding[The encoding for the backend (default Slash,InvalidUtf8,Dot)]' \
        '--s3-endpoint[Endpoint for S3 API]' \
        '--s3-env-auth[Get AWS credentials from runtime (environment variables or EC2/ECS meta data if no env vars)]' \
        '--s3-force-path-style[If true use path style access if false use virtual hosted style (default true)]' \
        '--s3-leave-parts-on-error[If true avoid calling abort upload on a failure, leaving all successfully uploaded parts on S3 for manual recovery]' \
        '--s3-list-chunk[Size of listing chunk (response list for each ListObject S3 request) (default 1000)]' \
        '--s3-list-url-encode[Whether to url encode listings: true/false/unset (default unset)]' \
        '--s3-list-version[Version of ListObjects to use: 1,2 or 0 for auto]' \
        '--s3-location-constraint[Location constraint - must be set to match the Region]' \
        '--s3-max-upload-parts[Maximum number of parts in a multipart upload (default 10000)]' \
        '--s3-memory-pool-flush-time[How often internal memory buffer pools will be flushed (default 1m0s)]' \
        '--s3-memory-pool-use-mmap[Whether to use mmap buffers in internal memory pool]' \
        '--s3-might-gzip[Set this if the backend might gzip objects (default unset)]' \
        '--s3-no-check-bucket[If set, don'\''t attempt to check the bucket exists or create it]' \
        '--s3-no-head[If set, don'\''t HEAD uploaded objects to check integrity]' \
        '--s3-no-head-object[If set, do not do HEAD before GET when getting objects]' \
        '--s3-no-system-metadata[Suppress setting and reading of system metadata]' \
        '--s3-profile[Profile to use in the shared credentials file]' \
        '--s3-provider[Choose your S3 provider]' \
        '--s3-region[Region to connect to]' \
        '--s3-requester-pays[Enables requester pays option when interacting with S3 bucket]' \
        '--s3-secret-access-key[AWS Secret Access Key (password)]' \
        '--s3-server-side-encryption[The server-side encryption algorithm used when storing this object in S3]' \
        '--s3-session-token[An AWS session token]' \
        '--s3-shared-credentials-file[Path to the shared credentials file]' \
        '--s3-sse-customer-algorithm[If using SSE-C, the server-side encryption algorithm used when storing this object in S3]' \
        '--s3-sse-customer-key[To use SSE-C you may provide the secret encryption key used to encrypt/decrypt your data]' \
        '--s3-sse-customer-key-base64[If using SSE-C you must provide the secret encryption key encoded in base64 format to encrypt/decrypt your data]' \
        '--s3-sse-customer-key-md5[If using SSE-C you may provide the secret encryption key MD5 checksum (optional)]' \
        '--s3-sse-kms-key-id[If using KMS ID you must provide the ARN of Key]' \
        '--s3-storage-class[The storage class to use when storing new objects in S3]' \
        '--s3-upload-concurrency[Concurrency for multipart uploads (default 4)]' \
        '--s3-upload-cutoff[Cutoff for switching to chunked upload (default 200Mi)]' \
        '--s3-use-accelerate-endpoint[If true use the AWS S3 accelerated endpoint]' \
        '--s3-use-multipart-etag[Whether to use ETag in multipart uploads for verification (default unset)]' \
        '--s3-use-presigned-request[Whether to use a presigned request or PutObject for single part uploads]' \
        '--s3-v2-auth[If true use v2 authentication]' \
        '--s3-version-at[Show file versions as they were at the specified time (default off)]' \
        '--s3-versions[Include old versions in directory listings]' \
        '--seafile-2fa[Two-factor authentication ('\''true'\'' if the account has 2FA enabled)]' \
        '--seafile-create-library[Should rclone create a library if it doesn'\''t exist]' \
        '--seafile-encoding[The encoding for the backend (default Slash,DoubleQuote,BackSlash,Ctl,InvalidUtf8)]' \
        '--seafile-library[Name of the library]' \
        '--seafile-library-key[Library password (for encrypted libraries only) (obscured)]' \
        '--seafile-pass[Password (obscured)]' \
        '--seafile-url[URL of seafile host to connect to]' \
        '--seafile-user[User name (usually email address)]' \
        '--sftp-ask-password[Allow asking for SFTP password when needed]' \
        '--sftp-chunk-size[Upload and download chunk size (default 32Ki)]' \
        '--sftp-ciphers[Space separated list of ciphers to be used for session encryption, ordered by preference]' \
        '--sftp-concurrency[The maximum number of outstanding requests for one file (default 64)]' \
        '--sftp-disable-concurrent-reads[If set don'\''t use concurrent reads]' \
        '--sftp-disable-concurrent-writes[If set don'\''t use concurrent writes]' \
        '--sftp-disable-hashcheck[Disable the execution of SSH commands to determine if remote file hashing is available]' \
        '--sftp-host[SSH host to connect to]' \
        '--sftp-idle-timeout[Max time before closing idle connections (default 1m0s)]' \
        '--sftp-key-exchange[Space separated list of key exchange algorithms, ordered by preference]' \
        '--sftp-key-file[Path to PEM-encoded private key file]' \
        '--sftp-key-file-pass[The passphrase to decrypt the PEM-encoded private key file (obscured)]' \
        '--sftp-key-pem[Raw PEM-encoded private key]' \
        '--sftp-key-use-agent[When set forces the usage of the ssh-agent]' \
        '--sftp-known-hosts-file[Optional path to known_hosts file]' \
        '--sftp-macs[Space separated list of MACs (message authentication code) algorithms, ordered by preference]' \
        '--sftp-md5sum-command[The command used to read md5 hashes]' \
        '--sftp-pass[SSH password, leave blank to use ssh-agent (obscured)]' \
        '--sftp-path-override[Override path used by SSH shell commands]' \
        '--sftp-port[SSH port number (default 22)]' \
        '--sftp-pubkey-file[Optional path to public key file]' \
        '--sftp-server-command[Specifies the path or command to run a sftp server on the remote host]' \
        '--sftp-set-env[Environment variables to pass to sftp and commands]' \
        '--sftp-set-modtime[Set the modified time on the remote if set (default true)]' \
        '--sftp-sha1sum-command[The command used to read sha1 hashes]' \
        '--sftp-shell-type[The type of SSH shell on remote server, if any]' \
        '--sftp-skip-links[Set to skip any symlinks and any other non regular files]' \
        '--sftp-subsystem[Specifies the SSH2 subsystem on the remote host (default "sftp")]' \
        '--sftp-use-fstat[If set use fstat instead of stat]' \
        '--sftp-use-insecure-cipher[Enable the use of insecure ciphers and key exchange methods]' \
        '--sftp-user[SSH username (default "vierbein")]' \
        '--sharefile-chunk-size[Upload chunk size (default 64Mi)]' \
        '--sharefile-encoding[The encoding for the backend (default Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,BackSlash,Ctl,LeftSpace,LeftPeriod,RightSpace,RightPeriod,InvalidUtf8,Dot)]' \
        '--sharefile-endpoint[Endpoint for API calls]' \
        '--sharefile-root-folder-id[ID of the root folder]' \
        '--sharefile-upload-cutoff[Cutoff for switching to multipart upload (default 128Mi)]' \
        '--sia-api-password[Sia Daemon API Password (obscured)]' \
        '--sia-api-url[Sia daemon API URL, like http://sia.daemon.host:9980 (default "http://127.0.0.1:9980")]' \
        '--sia-encoding[The encoding for the backend (default Slash,Question,Hash,Percent,Del,Ctl,InvalidUtf8,Dot)]' \
        '--sia-user-agent[Siad User Agent (default "Sia-Agent")]' \
        '--skip-links[Don'\''t warn about skipped symlinks]' \
        '--smb-case-insensitive[Whether the server is configured to be case-insensitive (default true)]' \
        '--smb-domain[Domain name for NTLM authentication (default "WORKGROUP")]' \
        '--smb-encoding[The encoding for the backend (default Slash,LtGt,DoubleQuote,Colon,Question,Asterisk,Pipe,BackSlash,Ctl,RightSpace,RightPeriod,InvalidUtf8,Dot)]' \
        '--smb-hide-special-share[Hide special shares (e.g. print$) which users aren'\''t supposed to access (default true)]' \
        '--smb-host[SMB server hostname to connect to]' \
        '--smb-idle-timeout[Max time before closing idle connections (default 1m0s)]' \
        '--smb-pass[SMB password (obscured)]' \
        '--smb-port[SMB port number (default 445)]' \
        '--smb-user[SMB username (default "vierbein")]' \
        '--storj-access-grant[Access grant]' \
        '--storj-api-key[API key]' \
        '--storj-passphrase[Encryption passphrase]' \
        '--storj-provider[Choose an authentication method (default "existing")]' \
        '--storj-satellite-address[Satellite address (default "us-central-1.storj.io")]' \
        '--sugarsync-access-key-id[Sugarsync Access Key ID]' \
        '--sugarsync-app-id[Sugarsync App ID]' \
        '--sugarsync-authorization[Sugarsync authorization]' \
        '--sugarsync-authorization-expiry[Sugarsync authorization expiry]' \
        '--sugarsync-deleted-id[Sugarsync deleted folder id]' \
        '--sugarsync-encoding[The encoding for the backend (default Slash,Ctl,InvalidUtf8,Dot)]' \
        '--sugarsync-hard-delete[Permanently delete files if true]' \
        '--sugarsync-private-access-key[Sugarsync Private Access Key]' \
        '--sugarsync-refresh-token[Sugarsync refresh token]' \
        '--sugarsync-root-id[Sugarsync root id]' \
        '--sugarsync-user[Sugarsync user]' \
        '--swift-application-credential-id[Application Credential ID (OS_APPLICATION_CREDENTIAL_ID)]' \
        '--swift-application-credential-name[Application Credential Name (OS_APPLICATION_CREDENTIAL_NAME)]' \
        '--swift-application-credential-secret[Application Credential Secret (OS_APPLICATION_CREDENTIAL_SECRET)]' \
        '--swift-auth[Authentication URL for server (OS_AUTH_URL)]' \
        '--swift-auth-token[Auth Token from alternate authentication - optional (OS_AUTH_TOKEN)]' \
        '--swift-auth-version[AuthVersion - optional - set to (1,2,3) if your auth URL has no version (ST_AUTH_VERSION)]' \
        '--swift-chunk-size[Above this size files will be chunked into a _segments container (default 5Gi)]' \
        '--swift-domain[User domain - optional (v3 auth) (OS_USER_DOMAIN_NAME)]' \
        '--swift-encoding[The encoding for the backend (default Slash,InvalidUtf8)]' \
        '--swift-endpoint-type[Endpoint type to choose from the service catalogue (OS_ENDPOINT_TYPE) (default "public")]' \
        '--swift-env-auth[Get swift credentials from environment variables in standard OpenStack form]' \
        '--swift-key[API key or password (OS_PASSWORD)]' \
        '--swift-leave-parts-on-error[If true avoid calling abort upload on a failure]' \
        '--swift-no-chunk[Don'\''t chunk files during streaming upload]' \
        '--swift-no-large-objects[Disable support for static and dynamic large objects]' \
        '--swift-region[Region name - optional (OS_REGION_NAME)]' \
        '--swift-storage-policy[The storage policy to use when creating a new container]' \
        '--swift-storage-url[Storage URL - optional (OS_STORAGE_URL)]' \
        '--swift-tenant[Tenant name - optional for v1 auth, this or tenant_id required otherwise (OS_TENANT_NAME or OS_PROJECT_NAME)]' \
        '--swift-tenant-domain[Tenant domain - optional (v3 auth) (OS_PROJECT_DOMAIN_NAME)]' \
        '--swift-tenant-id[Tenant ID - optional for v1 auth, this or tenant required otherwise (OS_TENANT_ID)]' \
        '--swift-user[User name to log in (OS_USERNAME)]' \
        '--swift-user-id[User ID to log in - optional - most swift systems use user and leave this blank (v3 auth) (OS_USER_ID)]' \
        '--union-action-policy[Policy to choose upstream on ACTION category (default "epall")]' \
        '--union-cache-time[Cache time of usage and free space (in seconds) (default 120)]' \
        '--union-create-policy[Policy to choose upstream on CREATE category (default "epmfs")]' \
        '--union-min-free-space[Minimum viable free space for lfs/eplfs policies (default 1Gi)]' \
        '--union-search-policy[Policy to choose upstream on SEARCH category (default "ff")]' \
        '--union-upstreams[List of space separated upstreams]' \
        '--uptobox-access-token[Your access token]' \
        '--uptobox-encoding[The encoding for the backend (default Slash,LtGt,DoubleQuote,BackQuote,Del,Ctl,LeftSpace,InvalidUtf8,Dot)]' \
        '--webdav-bearer-token[Bearer token instead of user/pass (e.g. a Macaroon)]' \
        '--webdav-bearer-token-command[Command to run to get a bearer token]' \
        '--webdav-encoding[The encoding for the backend]' \
        '--webdav-headers[Set HTTP headers for all transactions]' \
        '--webdav-pass[Password (obscured)]' \
        '--webdav-url[URL of http host to connect to]' \
        '--webdav-user[User name]' \
        '--webdav-vendor[Name of the WebDAV site/service/software you are using]' \
        '--yandex-auth-url[Auth server URL]' \
        '--yandex-client-id[OAuth Client Id]' \
        '--yandex-client-secret[OAuth Client Secret]' \
        '--yandex-encoding[The encoding for the backend (default Slash,Del,Ctl,InvalidUtf8,Dot)]' \
        '--yandex-hard-delete[Delete files permanently rather than putting them into the trash]' \
        '--yandex-token[OAuth Access Token as a JSON blob]' \
        '--yandex-token-url[Token server url]' \
        '--zoho-auth-url[Auth server URL]' \
        '--zoho-client-id[OAuth Client Id]' \
        '--zoho-client-secret[OAuth Client Secret]' \
        '--zoho-encoding[The encoding for the backend (default Del,Ctl,InvalidUtf8)]' \
        '--zoho-region[Zoho region to connect to]' \
        '--zoho-token[OAuth Access Token as a JSON blob]' \
        '--zoho-token-url[Token server url]' \
        "*: :_files"

}

function _rclone_link {
    _arguments \
        '--expire[The amount of time that the link will be valid (default off)]' \
        {-h,--help}'[help for link]' \
        '--unlink[Remove existing public link to file/folder]' \
        "*: :_files"

}

function _rclone_listremotes {
    _arguments \
        {-h,--help}'[help for listremotes]' \
        '--long[Show the type as well as names]' \
        "*: :_files"

}

function _rclone_ls {
    _arguments \
        {-h,--help}'[help for ls]' \
        "*: :_files"

}

function _rclone_lsd {
    _arguments \
        '-1[-1 1000files]' \
        '-1[-1 2500files]' \
        '-1[-1 4000files]' \
        {-h,--help}'[help for lsd]' \
        {-R,--recursive}'[Recurse into the listing]' \
        "*: :_files"

}

function _rclone_lsf {
    _arguments \
        '--absolute[Put a leading / in front of path names]' \
        '--csv[Output in CSV format]' \
        {-d,--dir-slash}'[Append a slash to directory names (default true)]' \
        '--dirs-only[Only list directories]' \
        '--files-only[Only list files]' \
        {-F,--format}'[Output format - see help for details (default "p")]' \
        '--hash[Use this hash when h is used in the format MD5|SHA-1|DropboxHash (default "md5")]' \
        {-h,--help}'[help for lsf]' \
        {-R,--recursive}'[Recurse into the listing]' \
        {-s,--separator}'[Separator for the items in the format (default ";")]' \
        "*: :_files"

}

function _rclone_lsjson {
    _arguments \
        '--dirs-only[Show only directories in the listing]' \
        '--encrypted[Show the encrypted names]' \
        '--files-only[Show only files in the listing]' \
        '--hash[Include hashes in the output (may take longer)]' \
        '--hash-type[Show only this hash type (may be repeated)]' \
        {-h,--help}'[help for lsjson]' \
        {-M,--metadata}'[Add metadata to the listing]' \
        '--no-mimetype[Don'\''t read the mime type (can speed things up)]' \
        '--no-modtime[Don'\''t read the modification time (can speed things up)]' \
        '--original[Show the ID of the underlying Object]' \
        {-R,--recursive}'[Recurse into the listing]' \
        '--stat[Just return the info for the pointed to file]' \
        "*: :_files"

}

function _rclone_lsl {
    _arguments \
        {-h,--help}'[help for lsl]' \
        "*: :_files"

}

function _rclone_md5sum {
    _arguments \
        '--base64[Output base64 encoded hashsum]' \
        {-C,--checkfile}'[Validate hashes against a given SUM file instead of printing them]' \
        '--download[Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote]' \
        {-h,--help}'[help for md5sum]' \
        '--output-file[Output hashsums to a file rather than the terminal]' \
        "*: :_files"

}

function _rclone_mkdir {
    _arguments \
        {-h,--help}'[help for mkdir]' \
        "*: :_files"

}

function _rclone_mount {
    _arguments \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--poll-interval[Time to wait between polling for changes. Must be smaller than dir-cache-time. Only on supported remotes. Set to 0 to disable (default 1m0s)]' \
        '--cache-dir[Directory rclone will use for caching.]' \
        '--vfs-cache-mode[Cache mode off|minimal|writes|full (default off)]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-max-size[Max total size of objects in the cache (default off)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128M)]' \
        '--vfs-read-chunk-size-limit[Max chunk doubling size (default off)]' \
        '--no-checksum[Don'\''t compare checksums on up/download.]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up).]' \
        '--no-seek[Don'\''t allow seeking in files.]' \
        '--read-only[Only allow read-only access.]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        '--transfers[Number of file transfers to run in parallel (default 4)]' \
        '--vfs-disk-space-total-size[Manually set the total disk space size (example: 256G, default: -1)]' \
        '--allow-non-empty[Allow mounting over a non-empty directory (not supported on Windows)]' \
        '--allow-other[Allow access to other users (not supported on Windows)]' \
        '--allow-root[Allow access to root user (not supported on Windows)]' \
        '--async-read[Use asynchronous reads (not supported on Windows) (default true)]' \
        '--attr-timeout[Time for which file/directory attributes are cached (default 1s)]' \
        '--daemon[Run mount in background and exit parent process (as background output is suppressed, use --log-file with --log-format=pid,... to monitor) (not supported on Windows)]' \
        '--daemon-timeout[Time limit for rclone to respond to kernel (not supported on Windows) (default 0s)]' \
        '--daemon-wait[Time to wait for ready mount from daemon (maximum time on Linux, constant sleep time on OSX/BSD) (not supported on Windows) (default 1m0s)]' \
        '--debug-fuse[Debug the FUSE internals - needs -v]' \
        '--default-permissions[Makes kernel enforce access control based on the file mode (not supported on Windows)]' \
        '--devname[Set the device name - default is remote:path]' \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--dir-perms[Directory permissions (default 0777)]':file:_files \
        '--file-perms[File permissions (default 0666)]':file:_files \
        '--fuse-flag[Flags or arguments to be passed direct to libfuse/WinFsp (repeat if required)]' \
        '--gid[Override the gid field set by the filesystem (not supported on Windows) (default 1000)]' \
        {-h,--help}'[help for mount]' \
        '--max-read-ahead[The number of bytes that can be prefetched for sequential reads (not supported on Windows) (default 128Ki)]' \
        '--network-mode[Mount as remote network drive, instead of fixed disk drive (supported on Windows only)]' \
        '--no-checksum[Don'\''t compare checksums on up/download]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up)]' \
        '--no-seek[Don'\''t allow seeking in files]' \
        '--noappledouble[Ignore Apple Double (._) and .DS_Store files (supported on OSX only) (default true)]' \
        '--noapplexattr[Ignore all "com.apple.*" extended attributes (supported on OSX only)]' \
        {-o,--option}'[Option for libfuse/WinFsp (repeat if required)]' \
        '--poll-interval[Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)]' \
        '--read-only[Only allow read-only access]' \
        '--uid[Override the uid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--umask[Override the permission bits set by the filesystem (not supported on Windows) (default 18)]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-case-insensitive[If a file name not found, find a case insensitive match]' \
        '--vfs-disk-space-total-size[Specify the total space of disk (default off)]' \
        '--vfs-fast-fingerprint[Use fast (less accurate) fingerprints for change detection]' \
        '--vfs-read-ahead[Extra read ahead over --buffer-size when using cache-mode full]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128Mi)]' \
        '--vfs-read-chunk-size-limit[If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('\''off'\'' is unlimited) (default off)]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-used-is-size[Use the rclone size algorithm for Used size]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        '--volname[Set the volume name (supported on Windows and OSX only)]' \
        '--write-back-cache[Makes kernel buffer writes before sending them to rclone (without this, writethrough caching is used) (not supported on Windows)]' \
        "*: :_files"

}

function _rclone_move {
    _arguments \
        '--create-empty-src-dirs[Create empty source dirs on destination after move]' \
        '--delete-empty-src-dirs[Delete empty source dirs after move]' \
        {-h,--help}'[help for move]' \
        "*: :_files"

}

function _rclone_moveto {
    _arguments \
        {-h,--help}'[help for moveto]' \
        "*: :_files"

}

function _rclone_ncdu {
    _arguments \
        {-h,--help}'[help for ncdu]' \
        "*: :_files"

}

function _rclone_obscure {
    _arguments \
        {-h,--help}'[help for obscure]' \
        "*: :_files"

}

function _rclone_purge {
    _arguments \
        {-h,--help}'[help for purge]' \
        "*: :_files"

}

function _rclone_rc {
    _arguments \
        {-a,--arg}'[Argument placed in the "arg" array]' \
        {-h,--help}'[help for rc]' \
        '--json[Input JSON - use instead of key=value args]' \
        '--loopback[If set connect to this rclone instance not via HTTP]' \
        '--no-output[If set, don'\''t output the JSON result]' \
        {-o,--opt}'[Option in the form name=value or name placed in the "opt" array]' \
        '--pass[Password to use to connect to rclone remote control]' \
        '--url[URL to connect to rclone remote control (default "http://localhost:5572/")]' \
        '--user[Username to use to rclone remote control]' \
        "*: :_files"

}

function _rclone_rcat {
    _arguments \
        {-h,--help}'[help for rcat]' \
        '--size[File size hint to preallocate (default -1)]' \
        "*: :_files"

}

function _rclone_rcd {
    _arguments \
        {-h,--help}'[help for rcd]' \
        "*: :_files"

}

function _rclone_rmdir {
    _arguments \
        {-h,--help}'[help for rmdir]' \
        "*: :_files"

}

function _rclone_rmdirs {
    _arguments \
        {-h,--help}'[help for rmdirs]' \
        '--leave-root[Do not remove root directory if empty]' \
        "*: :_files"

}

function _rclone_selfupdate {
    _arguments \
        '--beta[Install beta release]' \
        '--check[Check for latest release, do not download]' \
        {-h,--help}'[help for selfupdate]' \
        '--output[Save the downloaded binary at a given path (default: replace running binary)]' \
        '--package[Package format: zip|deb|rpm (default: zip)]' \
        '--stable[Install stable release (this is the default)]' \
        '--version[Install the given rclone version (default: latest)]' \
        "*: :_files"

}


function _rclone_serve {
    local line state

    function _commands {
        local -a commands
        commands=(
            'dlna:Serve remote:path over DLNA'
            'docker:Serve any remote on docker'\''s volume plugin API.'
            'ftp:Serve remote:path over FTP.'
            'http:Serve the remote over HTTP.'
            'restic:Serve the remote for restic'\''s REST API.'
            'sftp:Serve the remote over SFTP.'
            'webdav:Serve remote:path over WebDAV.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[help for serve]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (dlna)
            _rclone_serve_dlna
            ;;

        (docker)
            _rclone_serve_docker
            ;;

        (ftp)
            _rclone_serve_ftp
            ;;

        (http)
            _rclone_serve_http
            ;;

        (restic)
            _rclone_serve_restic
            ;;

        (sftp)
            _rclone_serve_sftp
            ;;

        (webdav)
            _rclone_serve_webdav
            ;;

        esac
        ;;
     esac

}

function _rclone_serve_dlna {
    _arguments \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--poll-interval[Time to wait between polling for changes. Must be smaller than dir-cache-time. Only on supported remotes. Set to 0 to disable (default 1m0s)]' \
        '--cache-dir[Directory rclone will use for caching.]' \
        '--vfs-cache-mode[Cache mode off|minimal|writes|full (default off)]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-max-size[Max total size of objects in the cache (default off)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128M)]' \
        '--vfs-read-chunk-size-limit[Max chunk doubling size (default off)]' \
        '--no-checksum[Don'\''t compare checksums on up/download.]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up).]' \
        '--no-seek[Don'\''t allow seeking in files.]' \
        '--read-only[Only allow read-only access.]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        '--transfers[Number of file transfers to run in parallel (default 4)]' \
        '--vfs-disk-space-total-size[Manually set the total disk space size (example: 256G, default: -1)]' \
        '--addr[The ip:port or :port to bind the DLNA http server to (default ":7879")]' \
        '--announce-interval[The interval between SSDP announcements (default 12m0s)]' \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--dir-perms[Directory permissions (default 0777)]':file:_files \
        '--file-perms[File permissions (default 0666)]':file:_files \
        '--gid[Override the gid field set by the filesystem (not supported on Windows) (default 1000)]' \
        {-h,--help}'[help for dlna]' \
        '--interface[The interface to use for SSDP (repeat as necessary)]' \
        '--log-trace[Enable trace logging of SOAP traffic]' \
        '--name[Name of DLNA server]' \
        '--no-checksum[Don'\''t compare checksums on up/download]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up)]' \
        '--no-seek[Don'\''t allow seeking in files]' \
        '--poll-interval[Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)]' \
        '--read-only[Only allow read-only access]' \
        '--uid[Override the uid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--umask[Override the permission bits set by the filesystem (not supported on Windows) (default 18)]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-case-insensitive[If a file name not found, find a case insensitive match]' \
        '--vfs-disk-space-total-size[Specify the total space of disk (default off)]' \
        '--vfs-fast-fingerprint[Use fast (less accurate) fingerprints for change detection]' \
        '--vfs-read-ahead[Extra read ahead over --buffer-size when using cache-mode full]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128Mi)]' \
        '--vfs-read-chunk-size-limit[If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('\''off'\'' is unlimited) (default off)]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-used-is-size[Use the rclone size algorithm for Used size]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        "*: :_files"

}

function _rclone_serve_docker {
    _arguments \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--poll-interval[Time to wait between polling for changes. Must be smaller than dir-cache-time. Only on supported remotes. Set to 0 to disable (default 1m0s)]' \
        '--cache-dir[Directory rclone will use for caching.]' \
        '--vfs-cache-mode[Cache mode off|minimal|writes|full (default off)]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-max-size[Max total size of objects in the cache (default off)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128M)]' \
        '--vfs-read-chunk-size-limit[Max chunk doubling size (default off)]' \
        '--no-checksum[Don'\''t compare checksums on up/download.]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up).]' \
        '--no-seek[Don'\''t allow seeking in files.]' \
        '--read-only[Only allow read-only access.]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        '--transfers[Number of file transfers to run in parallel (default 4)]' \
        '--vfs-disk-space-total-size[Manually set the total disk space size (example: 256G, default: -1)]' \
        '--allow-non-empty[Allow mounting over a non-empty directory (not supported on Windows)]' \
        '--allow-other[Allow access to other users (not supported on Windows)]' \
        '--allow-root[Allow access to root user (not supported on Windows)]' \
        '--async-read[Use asynchronous reads (not supported on Windows) (default true)]' \
        '--attr-timeout[Time for which file/directory attributes are cached (default 1s)]' \
        '--base-dir[Base directory for volumes (default "/var/lib/docker-volumes/rclone")]' \
        '--daemon[Run mount in background and exit parent process (as background output is suppressed, use --log-file with --log-format=pid,... to monitor) (not supported on Windows)]' \
        '--daemon-timeout[Time limit for rclone to respond to kernel (not supported on Windows) (default 0s)]' \
        '--daemon-wait[Time to wait for ready mount from daemon (maximum time on Linux, constant sleep time on OSX/BSD) (not supported on Windows) (default 1m0s)]' \
        '--debug-fuse[Debug the FUSE internals - needs -v]' \
        '--default-permissions[Makes kernel enforce access control based on the file mode (not supported on Windows)]' \
        '--devname[Set the device name - default is remote:path]' \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--dir-perms[Directory permissions (default 0777)]':file:_files \
        '--file-perms[File permissions (default 0666)]':file:_files \
        '--forget-state[Skip restoring previous state]' \
        '--fuse-flag[Flags or arguments to be passed direct to libfuse/WinFsp (repeat if required)]' \
        '--gid[Override the gid field set by the filesystem (not supported on Windows) (default 1000)]' \
        {-h,--help}'[help for docker]' \
        '--max-read-ahead[The number of bytes that can be prefetched for sequential reads (not supported on Windows) (default 128Ki)]' \
        '--network-mode[Mount as remote network drive, instead of fixed disk drive (supported on Windows only)]' \
        '--no-checksum[Don'\''t compare checksums on up/download]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up)]' \
        '--no-seek[Don'\''t allow seeking in files]' \
        '--no-spec[Do not write spec file]' \
        '--noappledouble[Ignore Apple Double (._) and .DS_Store files (supported on OSX only) (default true)]' \
        '--noapplexattr[Ignore all "com.apple.*" extended attributes (supported on OSX only)]' \
        {-o,--option}'[Option for libfuse/WinFsp (repeat if required)]' \
        '--poll-interval[Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)]' \
        '--read-only[Only allow read-only access]' \
        '--socket-addr[Address <host:port> or absolute path (default: /run/docker/plugins/rclone.sock)]' \
        '--socket-gid[GID for unix socket (default: current process GID) (default 1000)]' \
        '--uid[Override the uid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--umask[Override the permission bits set by the filesystem (not supported on Windows) (default 18)]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-case-insensitive[If a file name not found, find a case insensitive match]' \
        '--vfs-disk-space-total-size[Specify the total space of disk (default off)]' \
        '--vfs-fast-fingerprint[Use fast (less accurate) fingerprints for change detection]' \
        '--vfs-read-ahead[Extra read ahead over --buffer-size when using cache-mode full]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128Mi)]' \
        '--vfs-read-chunk-size-limit[If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('\''off'\'' is unlimited) (default off)]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-used-is-size[Use the rclone size algorithm for Used size]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        '--volname[Set the volume name (supported on Windows and OSX only)]' \
        '--write-back-cache[Makes kernel buffer writes before sending them to rclone (without this, writethrough caching is used) (not supported on Windows)]' \
        "*: :_files"

}

function _rclone_serve_ftp {
    _arguments \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--poll-interval[Time to wait between polling for changes. Must be smaller than dir-cache-time. Only on supported remotes. Set to 0 to disable (default 1m0s)]' \
        '--cache-dir[Directory rclone will use for caching.]' \
        '--vfs-cache-mode[Cache mode off|minimal|writes|full (default off)]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-max-size[Max total size of objects in the cache (default off)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128M)]' \
        '--vfs-read-chunk-size-limit[Max chunk doubling size (default off)]' \
        '--no-checksum[Don'\''t compare checksums on up/download.]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up).]' \
        '--no-seek[Don'\''t allow seeking in files.]' \
        '--read-only[Only allow read-only access.]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        '--transfers[Number of file transfers to run in parallel (default 4)]' \
        '--vfs-disk-space-total-size[Manually set the total disk space size (example: 256G, default: -1)]' \
        '--addr[IPaddress:Port or :Port to bind server to (default "localhost:2121")]' \
        '--auth-proxy[A program to use to create the backend from the auth]' \
        '--cert[TLS PEM key (concatenation of certificate and CA certificate)]' \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--dir-perms[Directory permissions (default 0777)]':file:_files \
        '--file-perms[File permissions (default 0666)]':file:_files \
        '--gid[Override the gid field set by the filesystem (not supported on Windows) (default 1000)]' \
        {-h,--help}'[help for ftp]' \
        '--key[TLS PEM Private key]' \
        '--no-checksum[Don'\''t compare checksums on up/download]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up)]' \
        '--no-seek[Don'\''t allow seeking in files]' \
        '--pass[Password for authentication (empty value allow every password)]' \
        '--passive-port[Passive port range to use (default "30000-32000")]' \
        '--poll-interval[Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)]' \
        '--public-ip[Public IP address to advertise for passive connections]' \
        '--read-only[Only allow read-only access]' \
        '--uid[Override the uid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--umask[Override the permission bits set by the filesystem (not supported on Windows) (default 18)]' \
        '--user[User name for authentication (default "anonymous")]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-case-insensitive[If a file name not found, find a case insensitive match]' \
        '--vfs-disk-space-total-size[Specify the total space of disk (default off)]' \
        '--vfs-fast-fingerprint[Use fast (less accurate) fingerprints for change detection]' \
        '--vfs-read-ahead[Extra read ahead over --buffer-size when using cache-mode full]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128Mi)]' \
        '--vfs-read-chunk-size-limit[If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('\''off'\'' is unlimited) (default off)]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-used-is-size[Use the rclone size algorithm for Used size]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        "*: :_files"

}

function _rclone_serve_http {
    _arguments \
        '--addr[IPaddress:Port or :Port to bind server to (default \[127.0.0.1:8080\])]' \
        '--baseurl[Prefix for URLs - leave blank for root]' \
        '--cert[TLS PEM key (concatenation of certificate and CA certificate)]' \
        '--client-ca[Client certificate authority to verify clients with]' \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--dir-perms[Directory permissions (default 0777)]':file:_files \
        '--file-perms[File permissions (default 0666)]':file:_files \
        '--gid[Override the gid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--htpasswd[A htpasswd file - if not provided no authentication is done]' \
        '--key[TLS PEM Private key]' \
        '--max-header-bytes[Maximum size of request header (default 4096)]' \
        '--min-tls-version[Minimum TLS version that is acceptable (default "tls1.0")]' \
        '--no-checksum[Don'\''t compare checksums on up/download]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up)]' \
        '--no-seek[Don'\''t allow seeking in files]' \
        '--pass[Password for authentication]' \
        '--poll-interval[Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)]' \
        '--read-only[Only allow read-only access]' \
        '--realm[Realm for authentication]' \
        '--salt[Password hashing salt (default "dlPL2MqE")]' \
        '--server-read-timeout[Timeout for server reading data (default 1h0m0s)]' \
        '--server-write-timeout[Timeout for server writing data (default 1h0m0s)]' \
        '--template[User-specified template]' \
        '--uid[Override the uid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--umask[Override the permission bits set by the filesystem (not supported on Windows) (default 18)]' \
        '--user[User name for authentication]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-max-size[Max total size of objects in the cache (default off)]' \
        '--vfs-cache-mode[Cache mode off|minimal|writes|full (default off)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-case-insensitive[If a file name not found, find a case insensitive match]' \
        '--vfs-disk-space-total-size[Specify the total space of disk (default off)]' \
        '--vfs-fast-fingerprint[Use fast (less accurate) fingerprints for change detection]' \
        '--vfs-read-ahead[Extra read ahead over --buffer-size when using cache-mode full]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128Mi)]' \
        '--vfs-read-chunk-size-limit[If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('\''off'\'' is unlimited) (default off)]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-used-is-size[Use the rclone size algorithm for Used size]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        "*: :_files"

}

function _rclone_serve_restic {
    _arguments \
        '--addr[IPaddress:Port or :Port to bind server to (default \[127.0.0.1:8080\])]' \
        '--append-only[Disallow deletion of repository data]' \
        '--baseurl[Prefix for URLs - leave blank for root]' \
        '--cache-objects[Cache listed objects (default true)]' \
        '--cert[TLS PEM key (concatenation of certificate and CA certificate)]' \
        '--client-ca[Client certificate authority to verify clients with]' \
        {-h,--help}'[help for restic]' \
        '--htpasswd[A htpasswd file - if not provided no authentication is done]' \
        '--key[TLS PEM Private key]' \
        '--max-header-bytes[Maximum size of request header (default 4096)]' \
        '--min-tls-version[Minimum TLS version that is acceptable (default "tls1.0")]' \
        '--pass[Password for authentication]' \
        '--private-repos[Users can only access their private repo]' \
        '--realm[Realm for authentication]' \
        '--salt[Password hashing salt (default "dlPL2MqE")]' \
        '--server-read-timeout[Timeout for server reading data (default 1h0m0s)]' \
        '--server-write-timeout[Timeout for server writing data (default 1h0m0s)]' \
        '--stdio[Run an HTTP2 server on stdin/stdout]' \
        '--user[User name for authentication]' \
        "*: :_files"

}

function _rclone_serve_sftp {
    _arguments \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--poll-interval[Time to wait between polling for changes. Must be smaller than dir-cache-time. Only on supported remotes. Set to 0 to disable (default 1m0s)]' \
        '--cache-dir[Directory rclone will use for caching.]' \
        '--vfs-cache-mode[Cache mode off|minimal|writes|full (default off)]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-max-size[Max total size of objects in the cache (default off)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128M)]' \
        '--vfs-read-chunk-size-limit[Max chunk doubling size (default off)]' \
        '--no-checksum[Don'\''t compare checksums on up/download.]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up).]' \
        '--no-seek[Don'\''t allow seeking in files.]' \
        '--read-only[Only allow read-only access.]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        '--transfers[Number of file transfers to run in parallel (default 4)]' \
        '--vfs-disk-space-total-size[Manually set the total disk space size (example: 256G, default: -1)]' \
        '--addr[IPaddress:Port or :Port to bind server to (default "localhost:2022")]' \
        '--auth-proxy[A program to use to create the backend from the auth]' \
        '--authorized-keys[Authorized keys file (default "~/.ssh/authorized_keys")]' \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--dir-perms[Directory permissions (default 0777)]':file:_files \
        '--file-perms[File permissions (default 0666)]':file:_files \
        '--gid[Override the gid field set by the filesystem (not supported on Windows) (default 1000)]' \
        {-h,--help}'[help for sftp]' \
        '--key[SSH private host key file (Can be multi-valued, leave blank to auto generate)]' \
        '--no-auth[Allow connections with no authentication if set]' \
        '--no-checksum[Don'\''t compare checksums on up/download]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up)]' \
        '--no-seek[Don'\''t allow seeking in files]' \
        '--pass[Password for authentication]' \
        '--poll-interval[Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)]' \
        '--read-only[Only allow read-only access]' \
        '--stdio[Run an sftp server on stdin/stdout]' \
        '--uid[Override the uid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--umask[Override the permission bits set by the filesystem (not supported on Windows) (default 18)]' \
        '--user[User name for authentication]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-case-insensitive[If a file name not found, find a case insensitive match]' \
        '--vfs-disk-space-total-size[Specify the total space of disk (default off)]' \
        '--vfs-fast-fingerprint[Use fast (less accurate) fingerprints for change detection]' \
        '--vfs-read-ahead[Extra read ahead over --buffer-size when using cache-mode full]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128Mi)]' \
        '--vfs-read-chunk-size-limit[If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('\''off'\'' is unlimited) (default off)]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-used-is-size[Use the rclone size algorithm for Used size]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        "*: :_files"

}

function _rclone_serve_webdav {
    _arguments \
        '--addr[IPaddress:Port or :Port to bind server to (default \[127.0.0.1:8080\])]' \
        '--auth-proxy[A program to use to create the backend from the auth]' \
        '--baseurl[Prefix for URLs - leave blank for root]' \
        '--cert[TLS PEM key (concatenation of certificate and CA certificate)]' \
        '--client-ca[Client certificate authority to verify clients with]' \
        '--dir-cache-time[Time to cache directory entries for (default 5m0s)]' \
        '--dir-perms[Directory permissions (default 0777)]':file:_files \
        '--disable-dir-list[Disable HTML directory list on GET request for a directory]' \
        '--etag-hash[Which hash to use for the ETag, or auto or blank for off]' \
        '--file-perms[File permissions (default 0666)]':file:_files \
        '--gid[Override the gid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--htpasswd[A htpasswd file - if not provided no authentication is done]' \
        '--key[TLS PEM Private key]' \
        '--max-header-bytes[Maximum size of request header (default 4096)]' \
        '--min-tls-version[Minimum TLS version that is acceptable (default "tls1.0")]' \
        '--no-checksum[Don'\''t compare checksums on up/download]' \
        '--no-modtime[Don'\''t read/write the modification time (can speed things up)]' \
        '--no-seek[Don'\''t allow seeking in files]' \
        '--pass[Password for authentication]' \
        '--poll-interval[Time to wait between polling for changes, must be smaller than dir-cache-time and only on supported remotes (set 0 to disable) (default 1m0s)]' \
        '--read-only[Only allow read-only access]' \
        '--realm[Realm for authentication]' \
        '--salt[Password hashing salt (default "dlPL2MqE")]' \
        '--server-read-timeout[Timeout for server reading data (default 1h0m0s)]' \
        '--server-write-timeout[Timeout for server writing data (default 1h0m0s)]' \
        '--template[User-specified template]' \
        '--uid[Override the uid field set by the filesystem (not supported on Windows) (default 1000)]' \
        '--umask[Override the permission bits set by the filesystem (not supported on Windows) (default 18)]' \
        '--user[User name for authentication]' \
        '--vfs-cache-max-age[Max age of objects in the cache (default 1h0m0s)]' \
        '--vfs-cache-max-size[Max total size of objects in the cache (default off)]' \
        '--vfs-cache-mode[Cache mode off|minimal|writes|full (default off)]' \
        '--vfs-cache-poll-interval[Interval to poll the cache for stale objects (default 1m0s)]' \
        '--vfs-case-insensitive[If a file name not found, find a case insensitive match]' \
        '--vfs-disk-space-total-size[Specify the total space of disk (default off)]' \
        '--vfs-fast-fingerprint[Use fast (less accurate) fingerprints for change detection]' \
        '--vfs-read-ahead[Extra read ahead over --buffer-size when using cache-mode full]' \
        '--vfs-read-chunk-size[Read the source objects in chunks (default 128Mi)]' \
        '--vfs-read-chunk-size-limit[If greater than --vfs-read-chunk-size, double the chunk size after each chunk read, until the limit is reached ('\''off'\'' is unlimited) (default off)]' \
        '--vfs-read-wait[Time to wait for in-sequence read before seeking (default 20ms)]' \
        '--vfs-used-is-size[Use the rclone size algorithm for Used size]' \
        '--vfs-write-back[Time to writeback files after last use when using cache (default 5s)]' \
        '--vfs-write-wait[Time to wait for in-sequence write before giving error (default 1s)]' \
        "*: :_files"

}

function _rclone_settier {
    _arguments \
        {-h,--help}'[help for settier]' \
        "*: :_files"

}

function _rclone_sha1sum {
    _arguments \
        '--base64[Output base64 encoded hashsum]' \
        {-C,--checkfile}'[Validate hashes against a given SUM file instead of printing them]' \
        '--download[Download the file and hash it locally; if this flag is not specified, the hash is requested from the remote]' \
        {-h,--help}'[help for sha1sum]' \
        '--output-file[Output hashsums to a file rather than the terminal]' \
        "*: :_files"

}

function _rclone_size {
    _arguments \
        {-h,--help}'[help for size]' \
        '--json[Format output as JSON]' \
        "*: :_files"

}

function _rclone_sync {
    _arguments \
        '--create-empty-src-dirs[Create empty source dirs on destination after sync]' \
        {-h,--help}'[help for sync]' \
        "*: :_files"

}


function _rclone_test {
    local line state

    function _commands {
        local -a commands
        commands=(
            'changenotify:Log any change notify requests for the remote passed in.'
            'histogram:Makes a histogram of file name characters.'
            'info:Discovers file name or other limitations for paths.'
            'makefile:Make files with random contents of the size given'
            'makefiles:Make a random file hierarchy in a directory'
            'memory:Load all the objects at remote:path into memory and report memory stats.'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[help for test]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (changenotify)
            _rclone_test_changenotify
            ;;

        (histogram)
            _rclone_test_histogram
            ;;

        (info)
            _rclone_test_info
            ;;

        (makefile)
            _rclone_test_makefile
            ;;

        (makefiles)
            _rclone_test_makefiles
            ;;

        (memory)
            _rclone_test_memory
            ;;

        esac
        ;;
     esac

}

function _rclone_test_changenotify {
    _arguments \
        {-h,--help}'[help for changenotify]' \
        '--poll-interval[Time to wait between polling for changes (default 10s)]' \
        "*: :_files"

}

function _rclone_test_histogram {
    _arguments \
        {-h,--help}'[help for histogram]' \
        "*: :_files"

}

function _rclone_test_info {
    _arguments \
        '--all[Run all tests]' \
        '--check-control[Check control characters]' \
        '--check-length[Check max filename length]' \
        '--check-normalization[Check UTF-8 Normalization]' \
        '--check-streaming[Check uploads with indeterminate file size]' \
        {-h,--help}'[help for info]' \
        '--upload-wait[Wait after writing a file (default 0s)]' \
        '--write-json[Write results to file]' \
        "*: :_files"

}

function _rclone_test_makefile {
    _arguments \
        '--ascii[Fill files with random ASCII printable bytes only]' \
        '--chargen[Fill files with a ASCII chargen pattern]' \
        {-h,--help}'[help for makefile]' \
        '--pattern[Fill files with a periodic pattern]' \
        '--seed[Seed for the random number generator (0 for random) (default 1)]' \
        '--sparse[Make the files sparse (appear to be filled with ASCII 0x00)]' \
        '--zero[Fill files with ASCII 0x00]' \
        "*: :_files"

}

function _rclone_test_makefiles {
    _arguments \
        '--ascii[Fill files with random ASCII printable bytes only]' \
        '--chargen[Fill files with a ASCII chargen pattern]' \
        '--files[Number of files to create (default 1000)]' \
        '--files-per-directory[Average number of files per directory (default 10)]' \
        {-h,--help}'[help for makefiles]' \
        '--max-depth[Maximum depth of directory hierarchy (default 10)]' \
        '--max-file-size[Maximum size of files to create (default 100)]' \
        '--max-name-length[Maximum size of file names (default 12)]' \
        '--min-file-size[Minimum size of file to create]' \
        '--min-name-length[Minimum size of file names (default 4)]' \
        '--pattern[Fill files with a periodic pattern]' \
        '--seed[Seed for the random number generator (0 for random) (default 1)]' \
        '--sparse[Make the files sparse (appear to be filled with ASCII 0x00)]' \
        '--zero[Fill files with ASCII 0x00]' \
        "*: :_files"

}

function _rclone_test_memory {
    _arguments \
        {-h,--help}'[help for memory]' \
        "*: :_files"

}

function _rclone_touch {
    _arguments \
        {-h,--help}'[help for touch]' \
        '--localtime[Use localtime for timestamp, not UTC]' \
        {-C,--no-create}'[Do not create the file if it does not exist (implied with --recursive)]' \
        {-R,--recursive}'[Recursively touch all files]' \
        {-t,--timestamp}'[Use specified time instead of the current time of day]' \
        "*: :_files"

}

function _rclone_tree {
    _arguments \
        {-a,--all}'[All files are listed (list . files too)]' \
        {-d,--dirs-only}'[List directories only]' \
        '--dirsfirst[List directories before files (-U disables)]' \
        '--full-path[Print the full path prefix for each file]' \
        {-h,--help}'[help for tree]' \
        '--level[Descend only level directories deep]' \
        {-D,--modtime}'[Print the date of last modification.]' \
        '--noindent[Don'\''t print indentation lines]' \
        '--noreport[Turn off file/directory count at end of tree listing]' \
        {-o,--output}'[Output to file instead of stdout]' \
        {-p,--protections}'[Print the protections for each file.]' \
        {-Q,--quote}'[Quote filenames with double quotes.]' \
        {-s,--size}'[Print the size in bytes of each file.]' \
        '--sort[Select sort: name,version,size,mtime,ctime]' \
        '--sort-ctime[Sort files by last status change time]' \
        {-t,--sort-modtime}'[Sort files by last modification time]' \
        {-r,--sort-reverse}'[Reverse the order of the sort]' \
        {-U,--unsorted}'[Leave files unsorted]' \
        '--version[Sort files alphanumerically by version]' \
        "*: :_files"

}

function _rclone_version {
    _arguments \
        '--check[Check for new version]' \
        {-h,--help}'[help for version]' \
        "*: :_files"

}

_rclone "$@"

