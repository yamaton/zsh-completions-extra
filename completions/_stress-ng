#compdef stress-ng

# Auto-generated with h2o

function _stress-ng {
    _arguments \
        '--abort[abort all stressors if any stressor fails]' \
        '--aggressive[enable all aggressive options]' \
        {-a,--all}'[start N workers of each stress test]' \
        {-b,--backoff}'[wait of N microseconds before work starts]' \
        '--class[specify a class of stressors, use with --sequential]' \
        {-n,--dry-run}'[do not run]' \
        '--ftrace[enable kernel function call tracing]' \
        {-h,--help}'[show help]' \
        '--ignite-cpu[alter kernel controls to make CPU run hot]' \
        '--ionice-class[specify ionice class (idle, besteffort, realtime)]' \
        '--ionice-level[specify ionice level (0 max, 7 min)]' \
        {-j,--job}'[run the named jobfile]':file:_files \
        {-k,--keep-name}'[keep stress worker names to be '\''stress-ng'\'']' \
        '--keep-files[do not remove files or directories]' \
        '--log-brief[less verbose log messages]' \
        '--log-file[log messages to a log file]':file:_files \
        '--maximize[enable maximum stress options]' \
        '--max-fd[set maximum file descriptor limit]' \
        {-M,--metrics}'[print pseudo metrics of activity]' \
        '--metrics-brief[enable metrics and only show non-zero results]' \
        '--minimize[enable minimal stress options]' \
        '--no-madvise[don'\''t use random madvise options for each mmap]' \
        '--no-rand-seed[seed random numbers with the same constant]' \
        '--oomable[Do not respawn a stressor if it gets OOM'\''d]' \
        '--page-in[touch allocated pages that are not in core]' \
        '--parallel[synonym for '\''all N'\'']' \
        '--pathological[enable stressors that are known to hang a machine]' \
        '--perf[display perf statistics]' \
        {-q,--quiet}'[quiet output]' \
        {-r,--random}'[start N random workers]' \
        '--sched[set scheduler type]' \
        '--sched-prio[set scheduler priority level N]' \
        '--sched-period[set period for SCHED_DEADLINE to N nanosecs (Linux only)]' \
        '--sched-runtime[set runtime for SCHED_DEADLINE to N nanosecs (Linux only)]' \
        '--sched-deadline[set deadline for SCHED_DEADLINE to N nanosecs (Linux only)]' \
        '--sched-reclaim[set reclaim cpu bandwidth for deadline scheduler (Linux only)]' \
        '--seed[set the random number generator seed with a 64 bit value]' \
        '--sequential[run all stressors one by one, invoking N of them]' \
        '--skip-silent[silently skip unimplemented stressors]' \
        '--stressors[show available stress tests]' \
        '--smarg[show changes in S.M.A.R.T. data]' \
        '--syslog[log messages to the syslog]' \
        '--taskset[use specific CPUs (set CPU affinity)]' \
        '--temp-path[specify path for temporary directories and files]':file:_files \
        '--thrash[force all pages in causing swap thrashing]' \
        {-t,--timeout}'[timeout after T seconds]' \
        '--timer-slack[enable timer slack mode]' \
        '--times[show run time summary at end of the run]' \
        '--timestamp[timestamp log output]' \
        '--tz[collect temperatures from thermal zones (Linux only)]' \
        {-v,--verbose}'[verbose output]' \
        '--verify[verify results (not available on all tests)]' \
        '--verifiable[show stressors that enable verification via --verify]' \
        {-V,--version}'[show version]' \
        {-Y,--yaml}'[output results to YAML formatted file]':file:_files \
        {-x,--exclude}'[list of stressors to exclude (not run)]' \
        '--access[start N workers that stress file access permissions]' \
        '--access-ops[stop after N file access bogo operations]' \
        '--af-alg[start N workers that stress AF_ALG socket domain]' \
        '--af-alg-ops[stop after N af-alg bogo operations]' \
        '--af-alg-dump[dump internal list from /proc/crypto to stdout]' \
        '--affinity[start N workers that rapidly change CPU affinity]' \
        '--affinity-ops[stop after N affinity bogo operations]' \
        '--affinity-rand[change affinity randomly rather than sequentially]' \
        '--affinity-delay[delay in nanoseconds between affinity changes]' \
        '--affinity-pin[keep per stressor threads pinned to same CPU]' \
        '--affinity-sleep[sleep in nanoseconds between affinity changes]' \
        '--aio[start N workers that issue async I/O requests]' \
        '--aio-ops[stop after N bogo async I/O requests]' \
        '--aio-requests[number of async I/O requests per worker]' \
        '--aiol[start N workers that exercise Linux async I/O]' \
        '--aiol-ops[stop after N bogo Linux aio async I/O requests]' \
        '--aiol-requests[number of Linux aio async I/O requests per worker]' \
        '--apparmor[start N workers exercising AppArmor interfaces]' \
        '--apparmor-ops[stop after N bogo AppArmor worker bogo operations]' \
        '--alarm[start N workers exercising alarm timers]' \
        '--alarm-ops[stop after N alarm bogo operations]' \
        '--atomic[start N workers exercising GCC atomic operations]' \
        '--atomic-ops[stop after N bogo atomic bogo operations]' \
        '--bad-altstack[start N workers exercising bad signal stacks]' \
        '--bad-altstack-ops[stop after N bogo signal stack SIGSEGVs]' \
        '--bad-ioctl[start N stressors that perform illegal read ioctls on devices]' \
        '--bad-ioctl-ops[stop after N bad ioctl bogo operations]' \
        {-B,--bigheap}'[start N workers that grow the heap using calloc()]' \
        '--bigheap-ops[stop after N bogo bigheap operations]' \
        '--bigheap-growth[grow heap by N bytes per iteration]' \
        '--bind-mount[start N workers exercising bind mounts]' \
        '--bind-mount-ops[stop after N bogo bind mount operations]' \
        '--binderfs[start N workers exercising binderfs]' \
        '--binderfs-ops[stop after N bogo binderfs operations]' \
        '--branch[start N workers that force branch misprediction]' \
        '--branch-ops[stop after N branch misprediction branches]' \
        '--brk[start N workers performing rapid brk calls]' \
        '--brk-ops[stop after N brk bogo operations]' \
        '--brk-mlock[attempt to mlock newly mapped brk pages]' \
        '--brk-notouch[don'\''t touch (page in) new data segment page]' \
        '--bsearch[start N workers that exercise a binary search]' \
        '--bsearch-ops[stop after N binary search bogo operations]' \
        '--bsearch-size[number of 32 bit integers to bsearch]' \
        {-C,--cache}'[start N CPU cache thrashing workers]' \
        '--cache-ops[stop after N cache bogo operations]' \
        '--cache-cldemote[cache line demote (x86 only)]' \
        '--cache-clflushopt[optimized cache line flush (x86 only)]' \
        '--cache-no-affinity[do not change CPU affinity]' \
        '--cache-fence[serialize stores]' \
        '--cache-flush[flush cache after every memory write (x86 only)]' \
        '--cache-level[only exercise specified cache]' \
        '--cache-prefetch[prefetch on memory reads/writes]' \
        '--cache-sfence[serialize stores with sfence]' \
        '--cache-ways[only fill specified number of cache ways]' \
        '--cap[start N workers exercising capget]' \
        '--cap-ops[stop cap workers after N bogo capget operations]' \
        '--chattr[start N workers thrashing chattr file mode bits]' \
        '--chattr-ops[stop chattr workers after N bogo operations]' \
        '--chdir[start N workers thrashing chdir on many paths]' \
        '--chdir-ops[stop chdir workers after N bogo chdir operations]' \
        '--chdir-dirs[select number of directories to exercise chdir on]' \
        '--chmod[start N workers thrashing chmod file mode bits]' \
        '--chmod-ops[stop chmod workers after N bogo operations]' \
        '--chown[start N workers thrashing chown file ownership]' \
        '--chown-ops[stop chown workers after N bogo operations]' \
        '--chroot[start N workers thrashing chroot]' \
        '--chroot-ops[stop chroot workers after N bogo operations]' \
        '--clock[start N workers thrashing clocks and POSIX timers]' \
        '--clock-ops[stop clock workers after N bogo operations]' \
        '--clone[start N workers that rapidly create and reap clones]' \
        '--clone-ops[stop after N bogo clone operations]' \
        '--clone-max[set upper limit of N clones per worker]' \
        '--close[start N workers that exercise races on close]' \
        '--close-ops[stop after N bogo close operations]' \
        '--context[start N workers exercising user context]' \
        '--context-ops[stop context workers after N bogo operations]' \
        '--copy-file[start N workers that copy file data]' \
        '--copy-file-ops[stop after N copy bogo operations]' \
        '--copy-file-bytes[specify size of file to be copied]' \
        {-c,--cpu}'[start N workers that perform CPU only loading]' \
        '--cpu-ops[stop after N cpu bogo operations]' \
        {-l,--cpu-load}'[load CPU by P %, 0=sleep, 100=full load (see -c)]' \
        '--cpu-load-slice[specify time slice during busy load]' \
        '--cpu-method[specify stress cpu method M, default is all]' \
        '--cpu-online[start N workers offlining/onlining the CPUs]' \
        '--cpu-online-ops[stop after N offline/online operations]' \
        '--crypt[start N workers performing password encryption]' \
        '--crypt-ops[stop after N bogo crypt operations]' \
        '--cyclic[start N cyclic real time benchmark stressors]' \
        '--cyclic-ops[stop after N cyclic timing cycles]' \
        '--cyclic-method[specify cyclic method M, default is clock_ns]' \
        '--cyclic-dist[calculate distribution of interval N nanosecs]' \
        '--cyclic-policy[used rr or fifo scheduling policy]' \
        '--cyclic-prio[real time scheduling priority 1..100]' \
        '--cyclic-sleep[sleep time of real time timer in nanosecs]' \
        '--daemon[start N workers creating multiple daemons]' \
        '--daemon-ops[stop when N daemons have been created]' \
        '--dccp[start N workers exercising network DCCP I/O]' \
        '--dccp-domain[specify DCCP domain, default is ipv4]' \
        '--dccp-ops[stop after N DCCP bogo operations]' \
        '--dccp-opts[DCCP data send options \[send|sendmsg|sendmmsg\]]' \
        '--dccp-port[use DCCP ports P to P + number of workers - 1]' \
        {-D,--dentry}'[start N dentry thrashing stressors]' \
        '--dentry-ops[stop after N dentry bogo operations]' \
        '--dentry-order[specify unlink order (reverse, forward, stride)]' \
        '--dentries[create N dentries per iteration]' \
        '--dev[start N device entry thrashing stressors]' \
        '--dev-ops[stop after N device thrashing bogo ops]' \
        '--dev-file[specify the /dev/ file to exercise]' \
        '--dev-shm[start N /dev/shm file and mmap stressors]' \
        '--dev-shm-ops[stop after N /dev/shm bogo ops]' \
        '--dir[start N directory thrashing stressors]' \
        '--dir-ops[stop after N directory bogo operations]' \
        '--dir-dirs[select number of directories to exercise dir on]' \
        '--dirdeep[start N directory depth stressors]' \
        '--dirdeep-ops[stop after N directory depth bogo operations]' \
        '--dirdeep-dirs[create N directories per level]' \
        '--dirdeep-inodes[create a maximum N inodes (N can also be %)]' \
        '--dirmany[start N directory file populating stressors]' \
        '--dirmany-ops[stop after N directory file bogo operations]' \
        '--dnotify[start N workers exercising dnotify events]' \
        '--dnotify-ops[stop dnotify workers after N bogo operations]' \
        '--dup[start N workers exercising dup/close]' \
        '--dup-ops[stop after N dup/close bogo operations]' \
        '--dynlib[start N workers exercising dlopen/dlclose]' \
        '--dynlib-ops[stop after N dlopen/dlclose bogo operations]' \
        '--efivar[start N workers that read EFI variables]' \
        '--efivar-ops[stop after N EFI variable bogo read operations]' \
        '--enosys[start N workers that call non-existent system calls]' \
        '--enosys-ops[stop after N enosys bogo operations]' \
        '--env[start N workers setting environment vars]' \
        '--env-ops[stop after N env bogo operations]' \
        '--epoll[start N workers doing epoll handled socket activity]' \
        '--epoll-ops[stop after N epoll bogo operations]' \
        '--epoll-port[use socket ports P upwards]' \
        '--epoll-domain[specify socket domain, default is unix]' \
        '--eventfd[start N workers stressing eventfd read/writes]' \
        '--eventfd-ops[stop eventfd workers after N bogo operations]' \
        '--eventfs-nonblock[poll with non-blocking I/O on eventfd fd]' \
        '--exec[start N workers spinning on fork() and exec()]' \
        '--exec-ops[stop after N exec bogo operations]' \
        '--exec-max[create P workers per iteration, default is 1]' \
        '--exit-group[start N workers that exercise exit_group]' \
        '--exit-group-ops[stop exit_group workers after N bogo exit_group loops]' \
        '--fallocate[start N workers fallocating 16MB files]' \
        '--fallocate-ops[stop after N fallocate bogo operations]' \
        '--fallocate-bytes[specify size of file to allocate]' \
        '--fanotify[start N workers exercising fanotify events]' \
        '--fanotify-ops[stop fanotify workers after N bogo operations]' \
        '--fault[start N workers producing page faults]' \
        '--fault-ops[stop after N page fault bogo operations]' \
        '--fcntl[start N workers exercising fcntl commands]' \
        '--fcntl-ops[stop after N fcntl bogo operations]' \
        '--fiemap[start N workers exercising the FIEMAP ioctl]' \
        '--fiemap-ops[stop after N FIEMAP ioctl bogo operations]' \
        '--fiemap-bytes[specify size of file to fiemap]' \
        '--fifo[start N workers exercising fifo I/O]' \
        '--fifo-ops[stop after N fifo bogo operations]' \
        '--fifo-readers[number of fifo reader stressors to start]' \
        '--file-ioctl[start N workers exercising file specific ioctls]' \
        '--file-ioctl-ops[stop after N file ioctl bogo operations]' \
        '--filename[start N workers exercising filenames]' \
        '--filename-ops[stop after N filename bogo operations]' \
        '--filename-opts[specify allowed filename options]' \
        '--flock[start N workers locking a single file]' \
        '--flock-ops[stop after N flock bogo operations]' \
        {-f,--fork}'[start N workers spinning on fork() and exit()]' \
        '--fork-ops[stop after N fork bogo operations]' \
        '--fork-max[create P workers per iteration, default is 1]' \
        '--fork-vm[enable extra virtual memory pressure]' \
        '--fp-error[start N workers exercising floating point errors]' \
        '--fp-error-ops[stop after N fp-error bogo operations]' \
        '--fpunch[start N workers punching holes in a 16MB file]' \
        '--fpunch-ops[stop after N punch bogo operations]' \
        '--fstat[start N workers exercising fstat on files]' \
        '--fstat-ops[stop after N fstat bogo operations]' \
        '--fstat-dir[fstat files in the specified directory]':file:_files \
        '--full[start N workers exercising /dev/full]' \
        '--full-ops[stop after N /dev/full bogo I/O operations]' \
        '--funccall[start N workers exercising 1 to 9 arg functions]' \
        '--funccall-ops[stop after N function call bogo operations]' \
        '--funccall-method[select function call method M]' \
        '--funcret[start N workers exercising function return copying]' \
        '--funcret-ops[stop after N function return bogo operations]' \
        '--funcret-method[select method of exercising a function return type]' \
        '--futex[start N workers exercising a fast mutex]' \
        '--futex-ops[stop after N fast mutex bogo operations]' \
        '--get[start N workers exercising the get*() system calls]' \
        '--get-ops[stop after N get bogo operations]' \
        '--getdent[start N workers reading directories using getdents]' \
        '--getdent-ops[stop after N getdents bogo operations]' \
        '--getrandom[start N workers fetching random data via getrandom()]' \
        '--getrandom-ops[stop after N getrandom bogo operations]' \
        '--goto[start N workers that exercise heavy branching]' \
        '--goto-ops[stop after 1024 x N goto bogo operations]' \
        '--goto-direction[select goto direction forward, backward, random]' \
        '--handle[start N workers exercising name_to_handle_at]' \
        '--handle-ops[stop after N handle bogo operations]' \
        '--hash[start N workers that exercise various hash functions]' \
        '--hash-ops[stop after N hash bogo operations]' \
        '--hash-method[specify stress hash method M, default is all]' \
        {-d,--hdd}'[start N workers spinning on write()/unlink()]' \
        '--hdd-ops[stop after N hdd bogo operations]' \
        '--hdd-bytes[write N bytes per hdd worker (default is 1GB)]' \
        '--hdd-opts[specify list of various stressor options]' \
        '--hdd-write-size[set the default write size to N bytes]' \
        '--heapsort[start N workers heap sorting 32 bit random integers]' \
        '--heapsort-ops[stop after N heap sort bogo operations]' \
        '--heapsort-size[number of 32 bit integers to sort]' \
        '--hrtimers[start N workers that exercise high resolution timers]' \
        '--hrtimers-ops[stop after N bogo high-res timer bogo operations]' \
        '--hrtimers-adjust[adjust rate to try and maximum timer rate]' \
        '--hsearch[start N workers that exercise a hash table search]' \
        '--hsearch-ops[stop after N hash search bogo operations]' \
        '--hsearch-size[number of integers to insert into hash table]' \
        '--icache[start N CPU instruction cache thrashing workers]' \
        '--icache-ops[stop after N icache bogo operations]' \
        '--icmp-flood[start N ICMP packet flood workers]' \
        '--icmp-flood-ops[stop after N ICMP bogo operations (ICMP packets)]' \
        '--idle-page[start N idle page scanning workers]' \
        '--idle-page-ops[stop after N idle page scan bogo operations]' \
        '--inode-flags[start N workers exercising various inode flags]' \
        '--inode-flags-ops[stop inode-flags workers after N bogo operations]' \
        '--inotify[start N workers exercising inotify events]' \
        '--inotify-ops[stop inotify workers after N bogo operations]' \
        {-i,--io}'[start N workers spinning on sync()]' \
        '--io-ops[stop sync I/O after N io bogo operations]' \
        '--iomix[start N workers that have a mix of I/O operations]' \
        '--iomix-bytes[write N bytes per iomix worker (default is 1GB)]' \
        '--iomix-ops[stop iomix workers after N iomix bogo operations]' \
        '--ioport[start N workers exercising port I/O]' \
        '--ioport-ops[stop ioport workers after N port bogo operations]' \
        '--ioprio[start N workers exercising set/get iopriority]' \
        '--ioprio-ops[stop after N io bogo iopriority operations]' \
        '--io-uring[start N workers that issue io-uring I/O requests]' \
        '--io-uring-ops[stop after N bogo io-uring I/O requests]' \
        '--ipsec-mb[start N workers exercising the IPSec MB encoding]' \
        '--ipsec-mb-ops[stop after N ipsec bogo encoding operations]' \
        '--ipsec-mb-feature[specify CPU feature F]' \
        '--itimer[start N workers exercising interval timers]' \
        '--itimer-ops[stop after N interval timer bogo operations]' \
        '--itimer-rand[enable random interval timer frequency]' \
        '--judy[start N workers that exercise a judy array search]' \
        '--judy-ops[stop after N judy array search bogo operations]' \
        '--judy-size[number of 32 bit integers to insert into judy array]' \
        '--kcmp[start N workers exercising kcmp]' \
        '--kcmp-ops[stop after N kcmp bogo operations]' \
        '--key[start N workers exercising key operations]' \
        '--key-ops[stop after N key bogo operations]' \
        '--kill[start N workers killing with SIGUSR1]' \
        '--kill-ops[stop after N kill bogo operations]' \
        '--klog[start N workers exercising kernel syslog interface]' \
        '--klog-ops[stop after N klog bogo operations]' \
        '--kvm[start N workers exercising /dev/kvm]' \
        '--kvm-ops[stop after N kvm create/run/destroy operations]' \
        '--l1cache[start N CPU level 1 cache thrashing workers]' \
        '--l1cache-line-size[specify level 1 cache line size]' \
        '--l1cache-sets[specify level 1 cache sets]' \
        '--l1cache-size[specify level 1 cache size]' \
        '--l1cache-ways[only fill specified number of cache ways]' \
        '--landlock[start N workers stressing landlock file operations]' \
        '--landlock-ops[stop after N landlock bogo operations]' \
        '--lease[start N workers holding and breaking a lease]' \
        '--lease-ops[stop after N lease bogo operations]' \
        '--lease-breakers[number of lease breaking workers to start]' \
        '--link[start N workers creating hard links]' \
        '--link-ops[stop after N link bogo operations]' \
        '--list[start N workers that exercise list structures]' \
        '--list-ops[stop after N bogo list operations]' \
        '--list-method[select tlistmethod, all, circleq, insque, list, slist, stailq, tailq]' \
        '--list-size[N is the number of items in the list]' \
        '--loadavg[start N workers that create a large load average]' \
        '--loadavg-ops[stop load average workers after N bogo operations]' \
        '--locka[start N workers locking a file via advisory locks]' \
        '--locka-ops[stop after N locka bogo operations]' \
        '--lockbus[start N workers locking a memory increment]' \
        '--lockbus-ops[stop after N lockbus bogo operations]' \
        '--lockf[start N workers locking a single file via lockf]' \
        '--lockf-ops[stop after N lockf bogo operations]' \
        '--lockf-nonblock[don'\''t block if lock cannot be obtained, re-try]' \
        '--lockofd[start N workers using open file description locking]' \
        '--lockofd-ops[stop after N lockofd bogo operations]' \
        '--longjmp[start N workers exercising setjmp/longjmp]' \
        '--longjmp-ops[stop after N longjmp bogo operations]' \
        '--loop[start N workers exercising loopback devices]' \
        '--loop-ops[stop after N bogo loopback operations]' \
        '--lsearch[start N workers that exercise a linear search]' \
        '--lsearch-ops[stop after N linear search bogo operations]' \
        '--lsearch-size[number of 32 bit integers to lsearch]' \
        '--madvise[start N workers exercising madvise on memory]' \
        '--madvise-ops[stop after N bogo madvise operations]' \
        '--malloc[start N workers exercising malloc/realloc/free]' \
        '--malloc-bytes[allocate up to N bytes per allocation]' \
        '--malloc-max[keep up to N allocations at a time]' \
        '--malloc-ops[stop after N malloc bogo operations]' \
        '--malloc-thresh[threshold where malloc uses mmap instead of sbrk]' \
        '--malloc-pthreads[number of pthreads to run concurrently]' \
        '--malloc-touch[touch pages force pages to be populated]' \
        '--matrix[start N workers exercising matrix operations]' \
        '--matrix-ops[stop after N maxtrix bogo operations]' \
        '--matrix-method[specify matrix stress method M, default is all]' \
        '--matrix-size[specify the size of the N x N matrix]' \
        '--matrix-yx[matrix operation is y by x instead of x by y]' \
        '--matrix-3d[start N workers exercising 3D matrix operations]' \
        '--matrix-3d-ops[stop after N 3D maxtrix bogo operations]' \
        '--matrix-3d-method[specify 3D matrix stress method M, default is all]' \
        '--matrix-3d-size[specify the size of the N x N x N matrix]' \
        '--matrix-3d-zyx[matrix operation is z by y by x instead of x by y by z]' \
        '--mcontend[start N workers that produce memory contention]' \
        '--mcontend-ops[stop memory contention workers after N bogo-ops]' \
        '--membarrier[start N workers performing membarrier system calls]' \
        '--membarrier-ops[stop after N membarrier bogo operations]' \
        '--memcpy[start N workers performing memory copies]' \
        '--memcpy-ops[stop after N memcpy bogo operations]' \
        '--memcpy-method[set memcpy method (M = all, libc, builtin, naive)]' \
        '--memfd[start N workers allocating memory with memfd_create]' \
        '--memfd-bytes[allocate N bytes for each stress iteration]' \
        '--memfd-fds[number of memory fds to open per stressors]' \
        '--memfd-ops[stop after N memfd bogo operations]' \
        '--memhotplug[start N workers that exercise memory hotplug]' \
        '--memhotplug-ops[stop after N memory hotplug operations]' \
        '--memrate[start N workers exercised memory read/writes]' \
        '--memrate-ops[stop after N memrate bogo operations]' \
        '--memrate-bytes[size of memory buffer being exercised]' \
        '--memrate-rd-mbs[read rate from buffer in megabytes per second]' \
        '--memrate-wr-mbs[write rate to buffer in megabytes per second]' \
        '--memthrash[start N workers thrashing a 16MB memory buffer]' \
        '--memthrash-ops[stop after N memthrash bogo operations]' \
        '--memthrash-method[specify memthrash method M, default is all]' \
        '--mergesort[start N workers merge sorting 32 bit random integers]' \
        '--mergesort-ops[stop after N merge sort bogo operations]' \
        '--mergesort-size[number of 32 bit integers to sort]' \
        '--mincore[start N workers exercising mincore]' \
        '--mincore-ops[stop after N mincore bogo operations]' \
        '--mincore-random[randomly select pages rather than linear scan]' \
        '--misaligned[start N workers performing misaligned read/writes]' \
        '--misaligned-ops[stop after N misaligned bogo operations]' \
        '--misaligned-method[use misaligned memory read/write method]' \
        '--mknod[start N workers that exercise mknod]' \
        '--mknod-ops[stop after N mknod bogo operations]' \
        '--mlock[start N workers exercising mlock/munlock]' \
        '--mlock-ops[stop after N mlock bogo operations]' \
        '--mlockmany[start N workers exercising many mlock/munlock processes]' \
        '--mlockmany-ops[stop after N mlockmany bogo operations]' \
        '--mlockmany-procs[use N child processes to mlock regions]' \
        '--mmap[start N workers stressing mmap and munmap]' \
        '--mmap-ops[stop after N mmap bogo operations]' \
        '--mmap-async[using asynchronous msyncs for file based mmap]' \
        '--mmap-bytes[mmap and munmap N bytes for each stress iteration]' \
        '--mmap-file[mmap onto a file using synchronous msyncs]' \
        '--mmap-mprotect[enable mmap mprotect stressing]' \
        '--mmap-osync[enable O_SYNC on file]' \
        '--mmap-odirect[enable O_DIRECT on file]' \
        '--mmapaddr[start N workers stressing mmap with random addresses]' \
        '--mmapaddr-ops[stop after N mmapaddr bogo operations]' \
        '--mmapfixed[start N workers stressing mmap with fixed mappings]' \
        '--mmapfixed-ops[stop after N mmapfixed bogo operations]' \
        '--mmapfork[start N workers stressing many forked mmaps/munmaps]' \
        '--mmapfork-ops[stop after N mmapfork bogo operations]' \
        '--mmaphuge[start N workers stressing mmap with huge mappings]' \
        '--mmaphuge-ops[stop after N mmaphuge bogo operations]' \
        '--mmaphuge-mmaps[select number of memory mappings per iteration]' \
        '--mmapmany[start N workers stressing many mmaps and munmaps]' \
        '--mmapmany-ops[stop after N mmapmany bogo operations]' \
        '--mq[start N workers passing messages using POSIX messages]' \
        '--mq-ops[stop mq workers after N bogo messages]' \
        '--mq-size[specify the size of the POSIX message queue]' \
        '--mremap[start N workers stressing mremap]' \
        '--mremap-ops[stop after N mremap bogo operations]' \
        '--mremap-bytes[mremap N bytes maximum for each stress iteration]' \
        '--mremap-lock[mlock remap pages, force pages to be unswappable]' \
        '--msg[start N workers stressing System V messages]' \
        '--msg-ops[stop msg workers after N bogo messages]' \
        '--msg-types[enable N different message types]' \
        '--msync[start N workers syncing mmap'\''d data with msync]' \
        '--msync-ops[stop msync workers after N bogo msyncs]' \
        '--msync-bytes[size of file and memory mapped region to msync]' \
        '--munmap[start N workers stressing munmap]' \
        '--munmap-ops[stop after N munmap bogo operations]' \
        '--nanosleep[start N workers performing short sleeps]' \
        '--nanosleep-ops[stop after N bogo sleep operations]' \
        '--netdev[start N workers exercising netdevice ioctls]' \
        '--netdev-ops[stop netdev workers after N bogo operations]' \
        '--netlink-proc[start N workers exercising netlink process events]' \
        '--netlink-proc-ops[stop netlink-proc workers after N bogo events]' \
        '--netlink-task[start N workers exercising netlink tasks events]' \
        '--netlink-task-ops[stop netlink-task workers after N bogo events]' \
        '--nice[start N workers that randomly re-adjust nice levels]' \
        '--nice-ops[stop after N nice bogo operations]' \
        '--nop[start N workers that burn cycles with no-ops]' \
        '--nop-ops[stop after N nop bogo no-op operations]' \
        '--nop-instr[specify nop instruction to use]' \
        '--null[start N workers writing to /dev/null]' \
        '--null-ops[stop after N /dev/null bogo write operations]' \
        '--numa[start N workers stressing NUMA interfaces]' \
        '--numa-ops[stop after N NUMA bogo operations]' \
        '--oom-pipe[start N workers exercising large pipes]' \
        '--oom-pipe-ops[stop after N oom-pipe bogo operations]' \
        '--opcode[start N workers exercising random opcodes]' \
        '--opcode-ops[stop after N opcode bogo operations]' \
        '--opcode-method[set opcode stress method (M = random, inc, mixed, text)]' \
        {-o,--open}'[start N workers exercising open/close]' \
        '--open-ops[stop after N open/close bogo operations]' \
        '--open-fd[open files in /proc/$pid/fd]' \
        '--pageswap[start N workers that swap pages out and in]' \
        '--pageswap-ops[stop after N page swap bogo operations]' \
        '--pci[start N workers that read and mmap PCI regions]' \
        '--pci-ops[stop after N PCI bogo operations]' \
        '--personality[start N workers that change their personality]' \
        '--personality-ops[stop after N bogo personality calls]' \
        '--physpage[start N workers performing physical page lookup]' \
        '--physpage-ops[stop after N physical page bogo operations]' \
        '--pidfd[start N workers exercising pidfd system call]' \
        '--pidfd-ops[stop after N pidfd bogo operations]' \
        '--ping-sock[start N workers that exercises a ping socket]' \
        '--ping-sock-ops[stop after N ping sendto messages]' \
        {-p,--pipe}'[start N workers exercising pipe I/O]' \
        '--pipe-ops[stop after N pipe I/O bogo operations]' \
        '--pipe-data-size[set pipe size of each pipe write to N bytes]' \
        '--pipe-size[set pipe size to N bytes]' \
        {-p,--pipeherd}'[start N multi-process workers exercising pipes I/O]' \
        '--pipeherd-ops[stop after N pipeherd I/O bogo operations]' \
        '--pipeherd-yield[force processes to yield after each write]' \
        '--pkey[start N workers exercising pkey_mprotect]' \
        '--pkey-ops[stop after N bogo pkey_mprotect bogo operations]' \
        {-P,--poll}'[start N workers exercising zero timeout polling]' \
        '--poll-ops[stop after N poll bogo operations]' \
        '--poll-fds[use N file descriptors]' \
        '--procfs[start N workers reading portions of /proc]' \
        '--procfs-ops[stop procfs workers after N bogo read operations]' \
        '--prefetch[start N workers exercising memory prefetching]' \
        '--prefetch-ops[stop after N bogo prefetching operations]' \
        '--prefetch-l3-size[specify the L3 cache size of the CPU]' \
        '--pthread[start N workers that create multiple threads]' \
        '--pthread-ops[stop pthread workers after N bogo threads created]' \
        '--pthread-max[create P threads at a time by each worker]' \
        '--ptrace[start N workers that trace a child using ptrace]' \
        '--ptrace-ops[stop ptrace workers after N system calls are traced]' \
        '--pty[start N workers that exercise pseudoterminals]' \
        '--pty-ops[stop pty workers after N pty bogo operations]' \
        '--pty-max[attempt to open a maximum of N ptys]' \
        {-Q,--qsort}'[start N workers qsorting 32 bit random integers]' \
        '--qsort-ops[stop after N qsort bogo operations]' \
        '--qsort-size[number of 32 bit integers to sort]' \
        '--quota[start N workers exercising quotactl commands]' \
        '--quota-ops[stop after N quotactl bogo operations]' \
        '--radixsort[start N workers radix sorting random strings]' \
        '--radixsort-ops[stop after N radixsort bogo operations]' \
        '--radixsort-size[number of strings to sort]' \
        '--randlist[start N workers that exercise random ordered list]' \
        '--randlist-ops[stop after N randlist bogo no-op operations]' \
        '--randlist-compact[reduce mmap and malloc overheads]' \
        '--randlist-items[number of items in the random ordered list]' \
        '--randlist-size[size of data in each item in the list]' \
        '--ramfs[start N workers exercising ramfs mounts]' \
        '--ramfs-ops[stop after N bogo ramfs mount operations]' \
        '--ramfs-bytes[set the ramfs size in bytes, e.g. 2M is 2MB]' \
        '--rawdev[start N workers that read a raw device]' \
        '--rawdev-ops[stop after N rawdev read operations]' \
        '--rawdev-method[specify the rawdev read method to use]' \
        '--rawpkt[start N workers exercising raw packets]' \
        '--rawpkt-ops[stop after N raw packet bogo operations]' \
        '--rawpkt-port[use raw packet ports P to P + number of workers - 1]' \
        '--rawsock[start N workers performing raw socket send/receives]' \
        '--rawsock-ops[stop after N raw socket bogo operations]' \
        '--rawudp[start N workers exercising raw UDP socket I/O]' \
        '--rawudp-ops[stop after N raw socket UDP bogo operations]' \
        '--rawudp-port[use raw socket ports P to P + number of workers - 1]' \
        '--rdrand[start N workers exercising rdrand (x86 only)]' \
        '--rdrand-ops[stop after N rdrand bogo operations]' \
        '--rdrand-seed[use rdseed instead of rdrand]' \
        '--readahead[start N workers exercising file readahead]' \
        '--readahead-bytes[size of file to readahead on (default is 1GB)]' \
        '--readahead-ops[stop after N readahead bogo operations]' \
        '--reboot[start N workers that exercise bad reboot calls]' \
        '--reboot-ops[stop after N bogo reboot operations]' \
        '--remap[start N workers exercising page remappings]' \
        '--remap-ops[stop after N remapping bogo operations]' \
        {-R,--rename}'[start N workers exercising file renames]' \
        '--rename-ops[stop after N rename bogo operations]' \
        '--resched[start N workers that spawn renicing child processes]' \
        '--resched-ops[stop after N nice bogo nice'\''d yield operations]' \
        '--resources[start N workers consuming system resources]' \
        '--resources-ops[stop after N resource bogo operations]' \
        '--revio[start N workers performing reverse I/O]' \
        '--revio-ops[stop after N revio bogo operations]' \
        '--rmap[start N workers that stress reverse mappings]' \
        '--rmap-ops[stop after N rmap bogo operations]' \
        '--rseq[start N workers that exercise restartable sequences]' \
        '--rseq-ops[stop after N bogo restartable sequence operations]' \
        '--rtc[start N workers that exercise the RTC interfaces]' \
        '--rtc-ops[stop after N RTC bogo operations]' \
        '--schedpolicy[start N workers that exercise scheduling policy]' \
        '--schedpolicy-ops[stop after N scheduling policy bogo operations]' \
        '--sctp[start N workers performing SCTP send/receives]' \
        '--sctp-ops[stop after N SCTP bogo operations]' \
        '--sctp-domain[specify sctp domain, default is ipv4]' \
        '--sctp-port[use SCTP ports P to P + number of workers - 1]' \
        '--sctp-sched[specify sctp scheduler]' \
        '--seal[start N workers performing fcntl SEAL commands]' \
        '--seal-ops[stop after N SEAL bogo operations]' \
        '--seccomp[start N workers performing seccomp call filtering]' \
        '--seccomp-ops[stop after N seccomp bogo operations]' \
        '--secretmem[start N workers that use secretmem mappings]' \
        '--secretmem-ops[stop after N secretmem bogo operations]' \
        '--seek[start N workers performing random seek r/w IO]' \
        '--seek-ops[stop after N seek bogo operations]' \
        '--seek-punch[punch random holes in file to stress extents]' \
        '--seek-size[length of file to do random I/O upon]' \
        '--sem[start N workers doing semaphore operations]' \
        '--sem-ops[stop after N semaphore bogo operations]' \
        '--sem-procs[number of processes to start per worker]' \
        '--sem-sysv[start N workers doing System V semaphore operations]' \
        '--sem-sysv-ops[stop after N System V sem bogo operations]' \
        '--sem-sysv-procs[number of processes to start per worker]' \
        '--sendfile[start N workers exercising sendfile]' \
        '--sendfile-ops[stop after N bogo sendfile operations]' \
        '--sendfile-size[size of data to be sent with sendfile]' \
        {-f,--session}'[start N workers that exercise new sessions]' \
        '--session-ops[stop after N session bogo operations]' \
        '--set[start N workers exercising the set*() system calls]' \
        '--set-ops[stop after N set bogo operations]' \
        '--shellsort[start N workers shell sorting 32 bit random integers]' \
        '--shellsort-ops[stop after N shell sort bogo operations]' \
        '--shellsort-size[number of 32 bit integers to sort]' \
        '--shm[start N workers that exercise POSIX shared memory]' \
        '--shm-ops[stop after N POSIX shared memory bogo operations]' \
        '--shm-bytes[allocate/free N bytes of POSIX shared memory]' \
        '--shm-segs[allocate N POSIX shared memory segments per iteration]' \
        '--shm-sysv[start N workers that exercise System V shared memory]' \
        '--shm-sysv-ops[stop after N shared memory bogo operations]' \
        '--shm-sysv-bytes[allocate and free N bytes of shared memory per loop]' \
        '--shm-sysv-segs[allocate N shared memory segments per iteration]' \
        '--sigabrt[start N workers generating segmentation faults]' \
        '--sigabrt-ops[stop after N bogo segmentation faults]' \
        '--sigchld[start N workers that handle SIGCHLD]' \
        '--sigchld-ops[stop after N bogo SIGCHLD signals]' \
        '--sigfd[start N workers reading signals via signalfd reads]' \
        '--sigfd-ops[stop after N bogo signalfd reads]' \
        '--sigfpe[start N workers generating floating point math faults]' \
        '--sigfpe-ops[stop after N bogo floating point math faults]' \
        '--sigio[start N workers that exercise SIGIO signals]' \
        '--sigio-ops[stop after N bogo sigio signals]' \
        '--signal[start N workers that exercise signal]' \
        '--signal-ops[stop after N bogo signals]' \
        '--signest[start N workers generating nested signals]' \
        '--signest-ops[stop after N bogo nested signals]' \
        '--sigpending[start N workers exercising sigpending]' \
        '--sigpending-ops[stop after N sigpending bogo operations]' \
        '--sigpipe[start N workers exercising SIGPIPE]' \
        '--sigpipe-ops[stop after N SIGPIPE bogo operations]' \
        '--sigq[start N workers sending sigqueue signals]' \
        '--sigq-ops[stop after N sigqueue bogo operations]' \
        '--sigrt[start N workers sending real time signals]' \
        '--sigrt-ops[stop after N real time signal bogo operations]' \
        '--sigsegv[start N workers generating segmentation faults]' \
        '--sigsegv-ops[stop after N bogo segmentation faults]' \
        '--sigsuspend[start N workers exercising sigsuspend]' \
        '--sigsuspend-ops[stop after N bogo sigsuspend wakes]' \
        '--sigtrap[start N workers generating segmentation faults]' \
        '--sigtrap-ops[stop after N bogo segmentation faults]' \
        '--skiplist[start N workers that exercise a skiplist search]' \
        '--skiplist-ops[stop after N skiplist search bogo operations]' \
        '--skiplist-size[number of 32 bit integers to add to skiplist]' \
        '--sleep[start N workers performing various duration sleeps]' \
        '--sleep-ops[stop after N bogo sleep operations]' \
        '--sleep-max[create P threads at a time by each worker]' \
        '--smi[start N workers that trigger SMIs]' \
        '--smi-ops[stop after N SMIs have been triggered]' \
        {-S,--sock}'[start N workers exercising socket I/O]' \
        '--sock-domain[specify socket domain, default is ipv4]' \
        '--sock-nodelay[disable Nagle algorithm, send data immediately]' \
        '--sock-ops[stop after N socket bogo operations]' \
        '--sock-opts[socket options \[send|sendmsg|sendmmsg\]]' \
        '--sock-port[use socket ports P to P + number of workers - 1]' \
        '--sock-protocol[use socket protocol P, default is tcp, can be mptcp]' \
        '--sock-type[socket type (stream, seqpacket)]' \
        '--sock-zerocopy[enable zero copy sends]' \
        '--sockdiag[start N workers exercising sockdiag netlink]' \
        '--sockdiag-ops[stop sockdiag workers after N bogo messages]' \
        '--sockfd[start N workers sending file descriptors over sockets]' \
        '--sockfd-ops[stop after N sockfd bogo operations]' \
        '--sockfd-port[use socket fd ports P to P + number of workers - 1]' \
        '--sockpair[start N workers exercising socket pair I/O activity]' \
        '--sockpair-ops[stop after N socket pair bogo operations]' \
        '--sockmany[start N workers exercising many socket connections]' \
        '--sockmany-ops[stop after N sockmany bogo operations]' \
        '--softlockup[start N workers that cause softlockups]' \
        '--softlockup-ops[stop after N softlockup bogo operations]' \
        '--spawn[start N workers spawning stress-ng using posix_spawn]' \
        '--spawn-ops[stop after N spawn bogo operations]' \
        '--sparsematrix[start N workers that exercise a sparse matrix]' \
        '--sparsematrix-ops[stop after N bogo sparse matrix operations]' \
        '--sparsematrix-method[Mselect storage method: all, hash, judy, list or rb]' \
        '--sparsematrix-items[is the number of items in the spare matrix]' \
        '--sparsematrix-size[M is the width and height X x Y of the matrix]' \
        '--splice[start N workers reading/writing using splice]' \
        '--splice-ops[stop after N bogo splice operations]' \
        '--splice-bytes[number of bytes to transfer per splice call]' \
        '--stack[start N workers generating stack overflows]' \
        '--stack-ops[stop after N bogo stack overflows]' \
        '--stack-fill[fill stack, touches all new pages]' \
        '--stack-mlock[mlock stack, force pages to be unswappable]' \
        '--stackmmap[start N workers exercising a filebacked stack]' \
        '--stackmmap-ops[stop after N bogo stackmmap operations]' \
        '--str[start N workers exercising lib C string functions]' \
        '--str-method[specify the string function to stress]' \
        '--str-ops[stop after N bogo string operations]' \
        '--stream[start N workers exercising memory bandwidth]' \
        '--stream-ops[stop after N bogo stream operations]' \
        '--stream-index[specify number of indices into the data (0..3)]' \
        '--stream-l3-size[specify the L3 cache size of the CPU]' \
        '--stream-madvise[specify mmap'\''d stream buffer madvise advice]' \
        '--swap[start N workers exercising swapon/swapoff]' \
        '--swap-ops[stop after N swapon/swapoff operations]' \
        {-s,--switch}'[start N workers doing rapid context switches]' \
        '--switch-ops[stop after N context switch bogo operations]' \
        '--switch-freq[set frequency of context switches]' \
        '--switch-method[mq | pipe | sem-sysv]' \
        '--symlink[start N workers creating symbolic links]' \
        '--symlink-ops[stop after N symbolic link bogo operations]' \
        '--sync-file[start N workers exercise sync_file_range]' \
        '--sync-file-ops[stop after N sync_file_range bogo operations]' \
        '--sync-file-bytes[size of file to be sync'\''d]' \
        '--syncload[start N workers that synchronize load spikes]' \
        '--syncload-ops[stop after N syncload bogo operations]' \
        '--syncload-msbusy[maximum busy duration in milliseconds]' \
        '--syncload-mssleep[maximum sleep duration in milliseconds]' \
        '--sysbadaddr[start N workers that pass bad addresses to syscalls]' \
        '--sysbadaddr-ops[stop after N sysbadaddr bogo syscalls]' \
        '--sysinfo[start N workers reading system information]' \
        '--sysinfo-ops[stop after sysinfo bogo operations]' \
        '--sysinval[start N workers that pass invalid args to syscalls]' \
        '--sysinval-ops[stop after N sysinval bogo syscalls]' \
        '--sysfs[start N workers reading files from /sys]' \
        '--sysfs-ops[stop after sysfs bogo operations]' \
        '--tee[start N workers exercising the tee system call]' \
        '--tee-ops[stop after N tee bogo operations]' \
        {-T,--timer}'[start N workers producing timer events]' \
        '--timer-ops[stop after N timer bogo events]' \
        '--timer-freq[run timer(s) at F Hz, range 1 to 1000000000]' \
        '--timer-rand[enable random timer frequency]' \
        '--timerfd[start N workers producing timerfd events]' \
        '--timerfd-ops[stop after N timerfd bogo events]' \
        '--timerfd-fds[number of timerfd file descriptors to open]' \
        '--timerfd-freq[run timer(s) at F Hz, range 1 to 1000000000]' \
        '--timerfd-rand[enable random timerfd frequency]' \
        '--tlb-shootdown[start N workers that force TLB shootdowns]' \
        '--tlb-shootdown-ops[stop after N TLB shootdown bogo ops]' \
        '--tmpfs[start N workers mmap'\''ing a file on tmpfs]' \
        '--tmpfs-ops[stop after N tmpfs bogo ops]' \
        '--tmpfs-mmap-async[using asynchronous msyncs for tmpfs file based mmap]' \
        '--tmpfs-mmap-file[mmap onto a tmpfs file using synchronous msyncs]' \
        '--tree[start N workers that exercise tree structures]' \
        '--tree-ops[stop after N bogo tree operations]' \
        '--tree-method[select tree method, all,avl,binary,rb,splay]' \
        '--tree-size[N is the number of items in the tree]' \
        '--tsc[start N workers reading the time stamp counter]' \
        '--tsc-ops[stop after N TSC bogo operations]' \
        '--tsearch[start N workers that exercise a tree search]' \
        '--tsearch-ops[stop after N tree search bogo operations]' \
        '--tsearch-size[number of 32 bit integers to tsearch]' \
        '--tun[start N workers exercising tun interface]' \
        '--tun-ops[stop after N tun bogo operations]' \
        '--tun-tap[use TAP interface instead of TUN]' \
        '--udp[start N workers performing UDP send/receives]' \
        '--udp-ops[stop after N udp bogo operations]' \
        '--udp-domain[specify domain, default is ipv4]' \
        '--udp-lite[use the UDP-Lite (RFC 3828) protocol]' \
        '--udp-port[use ports P to P + number of workers - 1]' \
        '--udp-flood[start N workers that performs a UDP flood attack]' \
        '--udp-flood-ops[stop after N udp flood bogo operations]' \
        '--udp-flood-domain[specify domain, default is ipv4]' \
        '--unshare[start N workers exercising resource unsharing]' \
        '--unshare-ops[stop after N bogo unshare operations]' \
        '--uprobe[start N workers that generate uprobe events]' \
        '--uprobe-ops[stop after N uprobe events]' \
        {-u,--urandom}'[start N workers reading /dev/urandom]' \
        '--urandom-ops[stop after N urandom bogo read operations]' \
        '--userfaultfd[start N page faulting workers with userspace handling]' \
        '--userfaultfd-ops[stop after N page faults have been handled]' \
        '--sigsusr[start N workers exercising a userspace system call handler]' \
        '--sigsusr-ops[stop after N successful SIGSYS system callls]' \
        '--utime[start N workers updating file timestamps]' \
        '--utime-ops[stop after N utime bogo operations]' \
        '--utime-fsync[force utime meta data sync to the file system]' \
        '--vdso[start N workers exercising functions in the VDSO]' \
        '--vdso-ops[stop after N vDSO function calls]' \
        '--vdso-func[use just vDSO function F]' \
        '--vecmath[start N workers performing vector math ops]' \
        '--vecmath-ops[stop after N vector math bogo operations]' \
        '--vecwide[start N workers performing vector math ops]' \
        '--vecwide-ops[stop after N vector math bogo operations]' \
        '--verity[start N workers exercising file verity ioctls]' \
        '--verity-ops[stop after N file verity bogo operations]' \
        '--vfork[start N workers spinning on vfork() and exit()]' \
        '--vfork-ops[stop after N vfork bogo operations]' \
        '--vfork-max[create P processes per iteration, default is 1]' \
        '--vfork-vm[enable extra virtual memory pressure]' \
        '--vforkmany[start N workers spawning many vfork children]' \
        '--vforkmany-ops[stop after spawning N vfork children]' \
        '--vforkmany-vm[enable extra virtual memory pressure]' \
        {-m,--vm}'[start N workers spinning on anonymous mmap]' \
        '--vm-bytes[allocate N bytes per vm worker (default 256MB)]' \
        '--vm-hang[sleep N seconds before freeing memory]' \
        '--vm-keep[redirty memory instead of reallocating]' \
        '--vm-ops[stop after N vm bogo operations]' \
        '--vm-locked[lock the pages of the mapped region into memory]' \
        '--vm-madvise[specify mmap'\''d vm buffer madvise advice]' \
        '--vm-method[specify stress vm method M, default is all]' \
        '--vm-populate[populate (prefault) page tables for a mapping]' \
        '--vm-addr[start N vm address exercising workers]' \
        '--vm-addr-ops[stop after N vm address bogo operations]' \
        '--vm-rw[start N vm read/write process_vm* copy workers]' \
        '--vm-rw-bytes[transfer N bytes of memory per bogo operation]' \
        '--vm-rw-ops[stop after N vm process_vm* copy bogo operations]' \
        '--vm-segv[start N workers that unmap their address space]' \
        '--vm-segv-ops[stop after N vm-segv unmap'\''d SEGV faults]' \
        '--vm-splice[start N workers reading/writing using vmsplice]' \
        '--vm-splice-ops[stop after N bogo splice operations]' \
        '--vm-splice-bytes[number of bytes to transfer per vmsplice call]' \
        '--wait[start N workers waiting on child being stop/resumed]' \
        '--wait-ops[stop after N bogo wait operations]' \
        '--watchdog[start N workers that exercise /dev/watchdog]' \
        '--watchdog-ops[stop after N bogo watchdog operations]' \
        '--wcs[start N workers on lib C wide char string functions]' \
        '--wcs-method[specify the wide character string function to stress]' \
        '--wcs-ops[stop after N bogo wide character string operations]' \
        '--x86syscall[start N workers exercising functions using syscall]' \
        '--x86syscall-ops[stop after N syscall function calls]' \
        '--x86syscall-func[use just syscall function F]' \
        '--xattr[start N workers stressing file extended attributes]' \
        '--xattr-ops[stop after N bogo xattr operations]' \
        {-y,--yield}'[start N workers doing sched_yield() calls]' \
        '--yield-ops[stop after N bogo yield operations]' \
        '--zero[start N workers reading /dev/zero]' \
        '--zero-ops[stop after N /dev/zero bogo read operations]' \
        '--zlib[start N workers compressing data with zlib]' \
        '--zlib-level[specify zlib compression level 0=fast, 9=best]' \
        '--zlib-mem-level[specify zlib compression state memory usage 1=minimum, 9=maximum]' \
        '--zlib-method[specify zlib random data generation method M]' \
        '--zlib-ops[stop after N zlib bogo compression operations]' \
        '--zlib-strategy[specify zlib strategy 0=default, 1=filtered, 2=huffman only, 3=rle, 4=fixed]' \
        '--zlib-stream-bytes[specify the number of bytes to deflate until the current stream will be closed]' \
        '--zlib-window-bits[specify zlib window bits -8-(-15) | 8-15 | 24-31 | 40-47]' \
        '--zombie[start N workers that rapidly create and reap zombies]' \
        '--zombie-ops[stop after N bogo zombie fork operations]' \
        '--zombie-max[set upper limit of N zombies per worker]' \
        "*: :_files"

}

_stress-ng "$@"

