#compdef repo2docker

# Auto-generated with h2o


function _repo2docker {
    local line state

    function _commands {
        local -a commands
        commands=(
            'contents:specified by the user.'
            'relative:to the working directory of the image - ($HOME by default)'
        )
        _describe 'command' commands
    }
 

    _arguments -C \
        {-h,--help}'[show this help message and exit]' \
        '--help-all[Display all configurable options and exit.]' \
        '--version[Print the repo2docker version and exit.]' \
        '--config[Path to config file for repo2docker]' \
        '--json-logs[Emit JSON logs instead of human readable logs]' \
        '--image-name[Name of image to be built. If unspecified will be autogenerated]' \
        '--ref[Reference to build instead of default reference. For example branch name or commit for a Git repository.]' \
        '--debug[Turn on debug logging]' \
        '--no-build[Do not actually build the image. Useful in conjunction with --debug.]' \
        '--build[Build the image (default)]' \
        '--build-memory-limit[Total Memory that can be used by the docker build process]' \
        '--no-run[Do not run container after it has been built]' \
        '--run[Run container after it has been built (default).]' \
        {--publish,-p}'[Specify port mappings for the image. Needs a command to run in the container.]' \
        {--publish-all,-P}'[Publish all exposed ports to random host ports.]' \
        '--no-clean[Don'\''t clean up remote checkouts after we are done]' \
        '--clean[Clean up remote checkouts after we are done (default).]' \
        '--push[Push docker image to repository]' \
        '--no-push[Don'\''t push docker image to repository (default).]' \
        {--volume,-v}'[Volumes to mount inside the container, in form src:dest]' \
        '--user-id[User ID of the primary user in the image]' \
        '--user-name[Username of the primary user in the image]' \
        {--env,-e}'[Environment variables to define at container run time]' \
        {--editable,-E}'[Use the local repository in edit mode]' \
        '--target-repo-dir[Path inside the image where contents of the repositories are copied to, and where all the build operations (such as postBuild) happen. Defaults to ${HOME} if not set]':file:_files \
        '--appendix[Appendix of Dockerfile commands to run at the end of the build. Can be used to customize the resulting image after all standard build steps finish.]' \
        '--label[Extra label to set on the image, in form name=value]' \
        '--build-arg[Extra build arg to pass to the build process, in form name=value]' \
        '--subdir[Subdirectory of the git repository to examine. Defaults to '\'''\''.]':file:_files \
        '--cache-from[List of images to try & re-use cached image layers from. Docker only tries to re-use image layers from images built locally, not pulled from a registry. We can ask it to explicitly re-use layers from nonlocally built images by through the '\''cache_from'\'' parameter.]' \
        '--engine[Name of the container engine. Defaults to '\''docker'\''.]' \
        '--Application.log_datefmt[The date format used by logging formatters for %(asctime)s Default: '\''%Y-%m-%d %H:%M:%S'\'']' \
        '--Application.log_format[The Logging format template Default: '\''\[%(name)s\]%(highlevel)s %(message)s'\'']' \
        '--Application.log_level[Set the log level by value or name. Choices: any of \[0, 10, 20, 30, 40, 50, '\''DEBUG'\'', '\''INFO'\'', '\''WARN'\'', '\''ERROR'\'', '\''CRITICAL'\''\] Default: 30]' \
        '--Application.logging_config[Configure additional log handlers. The default stderr logs handler is configured by the log_level, log_datefmt and log_format settings. Default: {}]' \
        '--Application.show_config[Instead of starting the Application, dump configuration to stdout Default: False]' \
        '--Application.show_config_json[Instead of starting the Application, dump configuration to stdout (as JSON) Default: False]' \
        '--Repo2Docker.all_ports[Publish all declared ports from container whiel running. Equivalent to -P option to docker run Default: False]' \
        '--Repo2Docker.appendix[Appendix of Dockerfile commands to run at the end of the build. Can be used to customize the resulting image after all standard build steps finish. Default: '\'''\'']' \
        '--Repo2Docker.base_image[Base image to use when building docker images. Only images that match the following criteria are supported:]' \
        '--Repo2Docker.build_memory_limit[Total memory that can be used by the docker image building process. Set to 0 for no limits. Default: 0]' \
        '--Repo2Docker.buildpacks[Ordered list of BuildPacks to try when building a git repository. Default: \[<class '\''repo2docker.buildpacks.legacy.LegacyBinderDockerBuil...]' \
        '--Repo2Docker.cache_from[List of images to try & re-use cached image layers from. Docker only tries to re-use image layers from images built locally, not pulled from a registry. We can ask it to explicitly re-use layers from nonlocally built images by through the '\''cache_from'\'' parameter. Default: \[\]]' \
        '--Repo2Docker.cleanup_checkout[Delete source repository after building is done. Useful when repo2docker is doing the git cloning Default: True]' \
        '--Repo2Docker.content_providers[Ordered list by priority of ContentProviders to try in turn to fetch the contents specified by the user. Default: \[<class '\''repo2docker.contentproviders.base.Local'\''>, <class '\''r...]' \
        '--Repo2Docker.default_buildpack[The default build pack to use when no other buildpacks are found. Default: <class '\''repo2docker.buildpacks.python.PythonBuildPack'\''>]' \
        '--Repo2Docker.dry_run[Do not actually build the docker image, just simulate it. Default: False]' \
        '--Repo2Docker.engine[Name of the container engine. Defaults to '\''docker'\''. Default: '\''docker'\'']' \
        '--Repo2Docker.environment[Environment variables to set when running the built image. Each item must be a string formatted as KEY=VALUE Default: \[\]]' \
        '--Repo2Docker.extra_build_args[Extra build args to pass to the image build process. This is pretty much only useful for custom Dockerfile based builds. Default: {}]' \
        '--Repo2Docker.extra_build_kwargs[extra kwargs to limit CPU quota when building a docker image. Dictionary that allows the user to set the desired runtime flag to configure the amount of access to CPU resources your container has. Reference https://docs.docker.com/config/containers/resource_constraints/#cpu Default: {}]' \
        '--Repo2Docker.extra_run_kwargs[extra kwargs to limit CPU quota when running a docker image. Dictionary that allows the user to set the desired runtime flag to configure the amount of access to CPU resources your container has. Reference https://docs.docker.com/config/containers/resource_constraints/#cpu Default: {}]' \
        '--Repo2Docker.git_workdir[Working directory to use for check out of git repositories. The default is to use the system'\''s temporary directory. Should be somewhere ephemeral, such as /tmp. Default: None]' \
        '--Repo2Docker.json_logs[Log output in structured JSON format. Useful when stdout is consumed by other tools Default: False]' \
        '--Repo2Docker.labels[Extra labels to set on the final image. Each Label is a key-value pair, with the key being the name of the label and the value its value. Default: {}]' \
        '--Repo2Docker.log_datefmt[The date format used by logging formatters for %(asctime)s Default: '\''%Y-%m-%d %H:%M:%S'\'']' \
        '--Repo2Docker.log_format[The Logging format template Default: '\''\[%(name)s\]%(highlevel)s %(message)s'\'']' \
        '--Repo2Docker.log_level[Set the log level by value or name. Choices: any of \[0, 10, 20, 30, 40, 50, '\''DEBUG'\'', '\''INFO'\'', '\''WARN'\'', '\''ERROR'\'', '\''CRITICAL'\''\] Default: 30]' \
        '--Repo2Docker.logging_config[Configure additional log handlers. The default stderr logs handler is configured by the log_level, log_datefmt and log_format settings. Default: {}]' \
        '--Repo2Docker.output_image_spec[Docker Image name:tag to tag the built image with. Required parameter. Default: '\'''\'']' \
        '--Repo2Docker.platform[Platform to build for, linux/amd64 (recommended) or linux/arm64 (experimental). Default: '\'''\'']' \
        '--Repo2Docker.ports[Port mappings to establish when running the container. Equivalent to -p {key}:{value} options to docker run. {key} refers to port inside container, and {value} refers to port / host:port in the host Default: {}]' \
        '--Repo2Docker.push[Set to true to push docker image after building Default: False]' \
        '--Repo2Docker.ref[Git ref that should be built. If repo is a git repository, this ref is checked out in a local clone before repository is built. Default: None]' \
        '--Repo2Docker.repo[Specification of repository to build image for. Could be local path or git URL. Default: '\''.'\'']' \
        '--Repo2Docker.run[Run docker image after building Default: True]' \
        '--Repo2Docker.run_cmd[Command to run when running the container When left empty, a jupyter notebook is run. Default: \[\]]' \
        '--Repo2Docker.show_config[Instead of starting the Application, dump configuration to stdout Default: False]' \
        '--Repo2Docker.show_config_json[Instead of starting the Application, dump configuration to stdout (as JSON) Default: False]' \
        '--Repo2Docker.subdir[Subdirectory of the git repository to examine. Defaults to '\'''\''. Default: '\'''\'']' \
        '--Repo2Docker.swh_token[Token to use authenticated SWH API access. If unset, default to unauthenticated (limited) usage of the Software Heritage API. Default: None]' \
        '--Repo2Docker.target_repo_dir[Path inside the image where contents of the repositories are copied to, and where all the build operations (such as postBuild) happen. Defaults to ${HOME} if not set Default: '\'''\'']' \
        '--Repo2Docker.user_id[UID of the user to create inside the built image. Should be a uid that is not currently used by anything in the image. Defaults to uid of currently running user, since that is the most common case when running r2d manually. Might not affect Dockerfile builds. Default: 0]' \
        '--Repo2Docker.user_name[Username of the user to create inside the built image. Should be a username that is not currently used by anything in the image, and should conform to the restrictions on user names for Linux. Defaults to username of currently running user, since that is the most common case when running repo2docker manually. Default: '\''jovyan'\'']' \
        '--Repo2Docker.volumes[Volumes to mount when running the container. Only used when running, not during build process! Use a key-value pair, with the key being the volume source & value being the destination volume. Both source and destination can be relative. Source is resolved relative to the current working directory on the host, and destination is resolved relative to the working directory of the image - ($HOME by default) Default: {}]' \
        ': :->cmd' \
        '*:: :->subcmd'

    case $state in
    (cmd)
        _commands
        ;;
    (subcmd)
        case $line[1] in
        (contents)
            _repo2docker_contents
            ;;

        (relative)
            _repo2docker_relative
            ;;

        esac
        ;;
     esac

}

function _repo2docker_contents {
    _arguments \
        "*: :_files"

}

function _repo2docker_relative {
    _arguments \
        "*: :_files"

}

_repo2docker "$@"

